{"version":3,"sources":["servises/Context.js","components/loader/index.js","components/loader/loader.jsx","components/filter-menu/filter-menu.jsx","components/search-box/search-box.jsx","components/search-box/index.js","components/menu-sider/index.js","components/menu-sider/menu-sider.jsx","components/starting-page/index.js","components/starting-page/starting-page.jsx","servises/toggleItem.js","components/film-card/film-card.jsx","components/film-card/index.js","servises/getDataRequest.js","components/render-film-card/index.js","components/render-film-card/render-film-card.jsx","components/films-container/index.js","components/films-container/films-container.jsx","servises/defTotalRes.js","servises/getFromLocalStorage.js","components/movie-detail/movie-detail.jsx","components/movie-detail/index.js","servises/defGenres.js","components/app/app.jsx","components/app/index.js","index.js"],"names":["MyContext","React","createContext","Loader","style","margin","textAlign","FilterMenu","useContext","genreList","setGenreList","yearValue","setYearValue","className","Item","Group","options","value","onChange","placeholder","background","border","fontSize","color","Search","Input","SearchBox","searchHandler","useState","activateFilter","setActivateFilter","size","onSearch","overlay","placement","onClick","visible","overlayStyle","top","icon","xmlns","fill","width","height","viewBox","d","MenuSider","setPage","setGenre","loc","selectedKeys","mode","theme","DatabaseOutlined","to","HeartOutlined","EyeOutlined","StartingPage","history","setQ","randomMovie","themes","Math","floor","random","length","SmileOutlined","title","extra","type","push","toggleItem","item","selector","data","setData","fav","watch","idx","findIndex","el","newItem","slice","Meta","Card","FilmCard","result","ClickHandler","Title","Poster","Type","movie","setMovie","cover","alt","src","actions","shape","EyeFilled","HeartFilled","description","getDataRequest","searchParam","questionParam","setState","currPage","year","setError","setTotalResults","setLoading","setDetailRequest","API_KEY","fetch","then","resp","json","response","Response","Error","statusText","totalResults","catch","message","RenderFilmCard","state","setActivateModal","setShowDetail","favId","watchId","uniqueID","map","includes","imdbID","isFav","isWatch","FilmsContainer","favList","watchList","loading","setQuery","exact","path","defTotalRes","location","getFromLocalStorage","stateList","i","localStorage","key","getItem","TextTitle","Typography","MovieDetail","imdbRating","Rated","Runtime","Genre","Plot","span","level","marginBottom","defGenres","Header","Layout","Content","Footer","Sider","withRouter","App","useHistory","useLocation","pathname","split","urlPage","error","q","activateModal","detail","detailRequest","setFav","setFavId","setWatch","setWatchId","collapsedMenu","setCollapsedMenu","setCurrPage","getData","useCallback","useEffect","Provider","breakpoint","collapsible","onCollapse","centered","onCancel","footer","current","parseInt","total","page","onPageChange","hideOnSinglePage","showSizeChanger","pageSize","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3026f42c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst MyContext = React.createContext();\r\n\r\nexport default MyContext","import Loader from './loader.jsx';\r\nexport default Loader;","import React from 'react';\r\nimport {Spin} from 'antd';\r\n\r\n\r\nconst Loader = () => (\r\n    <div style={{ margin: '100px 0', textAlign: 'center' }}>\r\n        <Spin />\r\n    </div>\r\n)\r\n\r\nexport default Loader;\r\n\r\n","import './filter-menu.css'\r\nimport { Checkbox, InputNumber, Menu } from 'antd';\r\n\r\nimport React, { useContext } from 'react';\r\nimport MyContext from '../../servises/Context'\r\n\r\nconst FilterMenu = () => {\r\n\r\n    const filterOptions = ['movie', 'series'];\r\n\r\n    const { genreList, setGenreList, yearValue, setYearValue } = useContext(MyContext)\r\n\r\n    return (\r\n        <Menu className='filter-menu'>\r\n            <Menu.Item key=\"1\">\r\n                <Checkbox.Group\r\n                    options={filterOptions}\r\n                    value={genreList}\r\n                    onChange={value => setGenreList(value)} />\r\n            </Menu.Item>\r\n\r\n            <Menu.Item key=\"2\">\r\n                <InputNumber\r\n                    className='input-number'\r\n                    placeholder=\"year\"\r\n                    style={{ background: 'none', border: '1px', fontSize: '17px', color: 'white' }}\r\n                    value={yearValue}\r\n                    onChange={(value) => setYearValue(value)} />\r\n            </Menu.Item>\r\n        </Menu>\r\n    )\r\n}\r\n\r\nexport default FilterMenu;","import './search-box.css';\r\nimport { Row, Col, Input, Button, Dropdown } from 'antd';\r\nimport React, { useState} from 'react';\r\nimport FilterMenu from '../filter-menu/filter-menu'\r\n\r\nconst { Search } = Input;\r\n\r\nconst SearchBox = ({ searchHandler }) => {\r\n\r\n    const [activateFilter, setActivateFilter] = useState(false)\r\n\r\n    return (\r\n        <>\r\n            <Row className='search-row'>\r\n                <Col className='search' >\r\n                    <Search\r\n                        placeholder=\"enter movie, series\"\r\n                        size=\"large\"\r\n                        onSearch={value => searchHandler(value)} /> {/* q в стейт */}\r\n                </Col>\r\n                <Col>\r\n                    <Dropdown\r\n                        overlay={<FilterMenu />}\r\n                        placement='bottomLeft'\r\n                        onClick={() => setActivateFilter(!activateFilter)}\r\n                        visible={activateFilter}\r\n                        overlayStyle={{top:'64px'}}\r\n                    >\r\n                        <Button\r\n                            style={{ background: 'none' }}\r\n                            className='filter-menu-btn'\r\n                            icon={<svg xmlns=\"http://www.w3.org/2000/svg\" fill='white' width=\"30\" height=\"30\" className=\"bi bi-filter\" viewBox=\"0 0 16 16\">\r\n                                <path d=\"M6 10.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 0 1h-3a.5.5 0 0 1-.5-.5zm-2-3a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5zm-2-3a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-11a.5.5 0 0 1-.5-.5z\" />\r\n                            </svg>}\r\n                        />\r\n                    </Dropdown>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default SearchBox;","import SearchBox from './search-box';\r\nexport default SearchBox;","import MenuSider from './menu-sider.jsx';\r\nexport default MenuSider;","import './menu-sider.css'\r\nimport { Menu } from 'antd';\r\nimport { DatabaseOutlined, EyeOutlined, HeartOutlined } from '@ant-design/icons'\r\n\r\nimport React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst MenuSider = ({ setPage, setGenre, loc }) => {\r\n\r\n    return (\r\n        <>\r\n            <Menu\r\n    \r\n                selectedKeys={loc}\r\n                mode=\"inline\"\r\n                theme=\"dark\"\r\n                onClick={() => setPage(1)}\r\n            >\r\n                <Menu.Item\r\n                    key=\"main\"\r\n                    className=\"customclass\"\r\n                    icon={<DatabaseOutlined />}\r\n                    onClick={() => setGenre(['movie', 'series'])}\r\n                >\r\n                    <NavLink to={`/main/1`} />\r\n                    main\r\n                </Menu.Item>\r\n\r\n                <Menu.Item\r\n                    key=\"films\"\r\n                    className=\"customclass\"\r\n                    icon={<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-film\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M0 1a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H1a1 1 0 0 1-1-1V1zm4 0v6h8V1H4zm8 8H4v6h8V9zM1 1v2h2V1H1zm2 3H1v2h2V4zM1 7v2h2V7H1zm2 3H1v2h2v-2zm-2 3v2h2v-2H1zM15 1h-2v2h2V1zm-2 3v2h2V4h-2zm2 3h-2v2h2V7zm-2 3v2h2v-2h-2zm2 3h-2v2h2v-2z\" />\r\n                    </svg>}\r\n                    onClick={() => setGenre(['movie'])}\r\n                >\r\n                    <NavLink to={`/films/1`} />\r\n                    movies\r\n                </Menu.Item>\r\n\r\n                <Menu.Item\r\n                    key=\"serials\"\r\n                    className=\"customclass\"\r\n                    icon={<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-camera-reels\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M6 3a3 3 0 1 1-6 0 3 3 0 0 1 6 0zM1 3a2 2 0 1 0 4 0 2 2 0 0 0-4 0z\" />\r\n                        <path d=\"M9 6h.5a2 2 0 0 1 1.983 1.738l3.11-1.382A1 1 0 0 1 16 7.269v7.462a1 1 0 0 1-1.406.913l-3.111-1.382A2 2 0 0 1 9.5 16H2a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h7zm6 8.73V7.27l-3.5 1.555v4.35l3.5 1.556zM1 8v6a1 1 0 0 0 1 1h7.5a1 1 0 0 0 1-1V8a1 1 0 0 0-1-1H2a1 1 0 0 0-1 1z\" />\r\n                        <path d=\"M9 6a3 3 0 1 0 0-6 3 3 0 0 0 0 6zM7 3a2 2 0 1 1 4 0 2 2 0 0 1-4 0z\" />\r\n                    </svg>}\r\n                    onClick={() => setGenre(['series'])}\r\n                >\r\n                    <NavLink to={`/serials/1`} />\r\n                    serials\r\n                </Menu.Item>\r\n\r\n                <Menu.Item\r\n                    key=\"favorites\"\r\n                    className=\"customclass\"\r\n                    icon={<HeartOutlined />}\r\n                >\r\n                    <NavLink to={`/favorites/1`} />\r\n                    liked\r\n                </Menu.Item>\r\n\r\n                <Menu.Item\r\n                    key=\"to-watch\"\r\n                    className=\"customclass\"\r\n                    icon={<EyeOutlined />}>\r\n                    <NavLink to={`/to-watch/1`} />\r\n                    watchlist\r\n                </Menu.Item>\r\n\r\n            </Menu>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MenuSider;","import StartingPage from './starting-page.jsx';\r\nexport default StartingPage","import React from 'react';\r\nimport { Result, Button } from 'antd';\r\nimport { SmileOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst StartingPage = ({ history, setQ }) => {\r\n\r\n    const onStartClick = () => {\r\n        history.push('/main/1')\r\n        setQ(() => randomMovie())\r\n    }\r\n\r\n    const randomMovie = () => {\r\n        const themes = ['love', 'hate', 'sex', 'live', 'death', 'sad', 'earth', 'moon', 'sun', 'war', 'rage']\r\n        return themes[Math.floor(Math.random() * themes.length)]\r\n    }\r\n\r\n    return (\r\n        <Result\r\n            icon={<SmileOutlined />}\r\n            title=\"Welcome to the movie database\"\r\n            extra={\r\n                <Button type=\"primary\" onClick={() => onStartClick()}>\r\n                    let's start\r\n                </Button>\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nexport default StartingPage","const toggleItem = (item, selector, data, setData) => {\r\n\r\n  const fav = {...item, fav: !item.fav}\r\n  const watch= {...item, watch: !item.watch}\r\n\r\n  const idx = data.findIndex(el => el === item);\r\n  const newItem = selector === 'fav' ? fav : watch\r\n  const newArr = [...data.slice(0, idx), newItem, ...data.slice(idx+1)]; //склеиваем две част\r\n\r\n  setData(newArr)\r\n\r\n  /* let newIdList\r\n\r\n  if (!stateId.includes(item.imdbID)) {\r\n\r\n    newIdList = [...stateId, item.imdbID];\r\n\r\n    localStorage.setItem(name + '_' + item.imdbID, item.imdbID)\r\n  }\r\n\r\n  if (stateId.includes(item.imdbID)) {\r\n\r\n    newIdList = stateId.filter(elem => elem !== item.imdbID)\r\n\r\n    localStorage.removeItem(name + '_' + item.imdbID)\r\n    //в новый список попадают все кроме выбранного на удаление\r\n  }\r\n\r\n  setStateId(newIdList) */\r\n}\r\n\r\nexport default toggleItem;","import './film-card.css';\r\nimport { Card, Tag, Button } from 'antd';\r\nimport { HeartOutlined, EyeOutlined, EyeFilled, HeartFilled } from '@ant-design/icons';\r\n\r\nimport React, { useContext } from 'react';\r\nimport MyContext from '../../servises/Context'\r\nimport toggleItem from '../../servises/toggleItem';\r\n\r\n\r\nconst { Meta } = Card;\r\n\r\nconst FilmCard = ({ result, ClickHandler, Title, Poster, Type }) => {\r\n\r\n    const { movie, setMovie } = useContext(MyContext)\r\n\r\n    return (\r\n        <Card className='card-container'\r\n            cover={<img\r\n                alt={Title}\r\n                src={Poster === 'N/A' ?\r\n                    'https://placehold.it/198x264&text=Image+Not+Found' :\r\n                    Poster}\r\n                onClick={() => ClickHandler()} />}\r\n\r\n            actions={[\r\n                <>\r\n                    {Type === 'movie' ?\r\n                        <Tag color='magenta'>{Type}</Tag> :\r\n                        <Tag color='green'>{Type}</Tag>}\r\n                </>,\r\n\r\n                <Button\r\n                    className={result.watch ? 'overlay watch active' : 'overlay watch'} key='watch'\r\n                    shape='circle'\r\n                    icon={result.watch ? <EyeFilled /> : <EyeOutlined />}\r\n                    onClick={() => toggleItem(result, 'watch', movie, setMovie)} />\r\n                ,\r\n                <Button\r\n                    className={result.fav ? 'overlay like active' : 'overlay like'} key='fav'\r\n                    shape='circle'\r\n                    icon={result.fav ? <HeartFilled /> : <HeartOutlined />}\r\n                    onClick={() => toggleItem(result, 'fav', movie, setMovie)} />\r\n            ]}\r\n        >\r\n            <Meta\r\n                title={Title}\r\n                description={false}\r\n                onClick={() => ClickHandler()} />\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default FilmCard;\r\n\r\n","import FilmCard from './film-card.jsx';\r\nexport default FilmCard;","const getDataRequest = (searchParam, questionParam, setState, currPage, type = '', year = '', setError, setTotalResults, setLoading, setDetailRequest) => { //гибкий запрос на сервер\r\n\r\n  const API_KEY = 'a6a004a3'\r\n\r\n  fetch(`https://www.omdbapi.com/?${searchParam}=${questionParam}&page=${currPage}&type=${type.length === 2 ? type = '' : type}&y=${year}&apikey=${API_KEY}`)\r\n    .then(resp => resp.json())\r\n    .then(response => {\r\n      if (response.Response === 'False') { //если нет ответа\r\n        setError(response.Error) //записать в обьект ошибки ошибку\r\n        throw new Error(response.statusText)\r\n      } else {\r\n        if (searchParam === 's') {\r\n          setState(response.Search)\r\n          setTotalResults(response.totalResults)\r\n        }\r\n        if (searchParam === 'i' && response) {\r\n          setState(response)\r\n        }\r\n      }\r\n      setLoading(false)\r\n      setDetailRequest(false);\r\n    }).catch(({ message }) => {\r\n      setLoading(false);\r\n      setError(message);\r\n    })\r\n}\r\n\r\nexport default getDataRequest","import RenderFilmCard from './render-film-card.jsx';\r\nexport default RenderFilmCard;","import './render-film-card.css'\r\nimport React, { useContext } from 'react';\r\nimport MyContext from '../../servises/Context';\r\nimport FilmCard from '../film-card/'\r\nimport getDataRequest from '../../servises/getDataRequest'\r\n\r\nconst RenderFilmCard = ({ state }) => {\r\n\r\n  const { setLoading, setError, setTotalResults, setActivateModal, setDetailRequest, setShowDetail, favId, watchId, genreList, yearValue, currPage } = useContext(MyContext)\r\n\r\n  const filmClickHandler = (item) => { //обработчик события клика. при клике на карточку\r\n    setActivateModal(true); //показать модалку. эл импортируется из другого компонента\r\n    setDetailRequest(true); //обновить стейт с состоянием запроса к серверу\r\n    getDataRequest('i', item.imdbID, setShowDetail, currPage, genreList, yearValue, setError, setTotalResults, setLoading, setDetailRequest) //запрос к серверу за деталями фильма\r\n  }\r\n\r\n  /* const getIdRequest = (questionParam) => { //гибкий запрос на сервер\r\n\r\n    const API_KEY = 'a6a004a3'\r\n\r\n    fetch(`https://www.omdbapi.com/?i=${questionParam}&apikey=${API_KEY}`)\r\n      .then(resp => resp.json())\r\n      .then(response => {\r\n        if (response.Response === 'False') { //если нет ответа\r\n          setError(response.Error) //записать в обьект ошибки ошибку\r\n          throw new Error(response.statusText)\r\n        } else {\r\n          //setTermState(response)\r\n        }\r\n        setLoading(false)\r\n        setDetailRequest(false);\r\n      }).catch(({ message }) => {\r\n        setLoading(false);\r\n        setError(message);\r\n      })\r\n  } */\r\n\r\n  let uniqueID = []\r\n\r\n  return (\r\n\r\n    <>\r\n      {state !== null && state.length > 0 && state.map((result) => {\r\n\r\n        if (!uniqueID.includes(result.imdbID)) {\r\n          uniqueID.push(result.imdbID)\r\n\r\n          return (\r\n\r\n            <FilmCard\r\n              isFav={favId.includes(result.imdbID)}\r\n              isWatch={watchId.includes(result.imdbID)}\r\n\r\n              ClickHandler={() => filmClickHandler(result)}\r\n\r\n              key={result.imdbID} //присв ключ обьекту из списка в соотв с его номером в базе \r\n              result={result}\r\n              {...result}\r\n            />\r\n          )\r\n        }\r\n      })}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RenderFilmCard;","import FilmsContainer from './films-container.jsx';\r\nexport default FilmsContainer;","import React, { useContext } from 'react';\r\nimport { BrowserRouter as Route, Switch } from 'react-router-dom';\r\nimport StartingPage from '../starting-page';\r\nimport MyContext from '../../servises/Context';\r\nimport RenderFilmCard from '../render-film-card'\r\nimport Loader from '../loader';\r\n\r\nimport { Row } from 'antd';\r\n\r\n\r\nconst FilmsContainer = () => {\r\n\r\n    let { movie, favList, watchList, loading, history, setQuery } = useContext(MyContext)\r\n\r\n    return (\r\n\r\n        <Row className='cards-row' >\r\n            <Switch>\r\n                <Route exact path='/'>\r\n                    <StartingPage\r\n                        history={history}\r\n                        setQ= {setQuery}\r\n                    />\r\n                </Route>\r\n                <Route path='/main/:page'>\r\n                    {loading ? <Loader /> : <RenderFilmCard state={movie} />}\r\n                </Route>\r\n                <Route path='/favorites/:page'>\r\n                    <RenderFilmCard state={favList} />\r\n                </Route>\r\n                <Route path='/to-watch/:page'>\r\n                    <RenderFilmCard state={watchList} />\r\n                </Route>\r\n                <Route path='/films/:page'>\r\n                    <RenderFilmCard state={movie} />\r\n                </Route>\r\n                <Route path='/serials/:page'>\r\n                    <RenderFilmCard state={movie} />\r\n                </Route>\r\n            </Switch>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default FilmsContainer;","const defTotalRes = (location, favList, watchList, totalResults) => {\r\n    if (location === 'favorites') {\r\n      return favList.length\r\n    }\r\n    else if (location === 'to-watch') {\r\n      return watchList.length\r\n    }\r\n    else {\r\n      return totalResults\r\n    }\r\n  }\r\n\r\n  export default defTotalRes","const getFromLocalStorage = (state) => {\r\n\r\n    let stateList = []\r\n\r\n    for (let i = 0; i < localStorage.length; i++) {\r\n        let key = localStorage.key(i)\r\n        key.includes(state) && stateList.push(localStorage.getItem(key))\r\n    }\r\n\r\n\r\n\r\n    return stateList\r\n}\r\n\r\nexport default getFromLocalStorage;","import { Row, Col, Typography, Tag } from 'antd';\r\nimport React from 'react';\r\n\r\n\r\nconst TextTitle = Typography.Title;\r\n\r\nconst MovieDetail = ({ Title, Poster, imdbRating, Rated, Runtime, Genre, Plot }) => {\r\n\r\n    return (\r\n        <Row>\r\n            <Col span={11}>\r\n                <img\r\n                    src={Poster === 'N/A' ? 'https://placehold.it/198x264&text=Image+Not+Found' : Poster}\r\n                    alt={Title}\r\n                />\r\n            </Col>\r\n            <Col span={13}>\r\n                <Row>\r\n                    <Col span={21}>\r\n                        <TextTitle\r\n                            level={4}>\r\n                            {Title}\r\n                        </TextTitle>\r\n                    </Col>\r\n                    <Col span={3} style={{ textAlign: 'right' }}>\r\n                        <TextTitle\r\n                            level={4}>\r\n                            <span style={{ color: '#41A8F8' }}>\r\n                                {imdbRating}\r\n                            </span>\r\n                        </TextTitle>\r\n                    </Col>\r\n                </Row>\r\n                <Row style={{ marginBottom: '20px' }}>\r\n                    <Col>\r\n                        <Tag>{Rated}</Tag>\r\n                        <Tag>{Runtime}</Tag>\r\n                        <Tag>{Genre}</Tag>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>{Plot}</Col>\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n\r\n    )\r\n}\r\n\r\nexport default MovieDetail;","import MovieDetail from './movie-detail.jsx'\r\nexport default MovieDetail;","const defGenres = (location) => {\r\n    if (location === 'films') {\r\n        return (['movie'])\r\n    }\r\n    else if (location === 'serials') {\r\n        return (['series'])\r\n    } else {\r\n        return (['movie', 'series'])\r\n    }\r\n}\r\n\r\nexport default defGenres;","import './app.css';\r\nimport { Layout, Row, Modal, Empty, Pagination } from 'antd';\r\nimport React, { useEffect, useState, useCallback } from 'react';\r\nimport { useLocation, useHistory, withRouter } from 'react-router-dom';\r\nimport MyContext from '../../servises/Context';\r\nimport Loader from '../loader';\r\nimport SearchBox from '../search-box';\r\nimport MenuSider from '../menu-sider';\r\nimport FilmsContainer from '../films-container';\r\nimport getDataRequest from '../../servises/getDataRequest';\r\nimport defTotalRes from '../../servises/defTotalRes';\r\nimport getFromLocalStorage from '../../servises/getFromLocalStorage';\r\nimport MovieDetail from '../movie-detail';\r\nimport defGenres from '../../servises/defGenres';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n//const API_KEY = 'eb9d8a81';\r\n//const API_KEY = 'a6a004a3'\r\n\r\nfunction App() {\r\n\r\n  const history = useHistory()\r\n  let location = useLocation().pathname.split('/')[1];\r\n  let urlPage = useLocation().pathname.split('/')[2];\r\n\r\n  const [movie, setMovie] = useState(null); //обьект ответа от сервера\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [q, setQuery] = useState();\r\n\r\n  const [activateModal, setActivateModal] = useState(false);\r\n  const [detail, setShowDetail] = useState(false); //детали фильма\r\n  const [detailRequest, setDetailRequest] = useState(false); //ответ от сервера\r\n\r\n  const [favList, setFav] = useState([]);\r\n  const [favId, setFavId] = useState(() => { return getFromLocalStorage('favList') })\r\n\r\n  const [watchList, setWatch] = useState([]);\r\n  const [watchId, setWatchId] = useState(() => { return getFromLocalStorage('watchList') })\r\n\r\n  const [collapsedMenu, setCollapsedMenu] = useState(false);\r\n\r\n  const [currPage, setCurrPage] = useState(urlPage || 1) //стр в pagination\r\n  const [totalResults, setTotalResults] = useState(null); //кол-во ответов от сервера на  q\r\n\r\n  const [genreList, setGenreList] = useState(() => { return defGenres(location) }); //filter menu\r\n  const [yearValue, setYearValue] = useState(null)\r\n\r\n  const getData = useCallback(() => {\r\n    getDataRequest('s', q, setMovie, currPage, genreList, yearValue, setError, setTotalResults, setLoading, setDetailRequest);\r\n  }, [q, currPage, genreList, yearValue])\r\n\r\n  const data = { movie, setMovie, favList, setFav, favId, setFavId, watchList, setWatch, watchId, setWatchId, genreList, setGenreList, yearValue, setYearValue, currPage, setCurrPage, totalResults, setTotalResults, setActivateModal, detail, setShowDetail, detailRequest, setDetailRequest, setError, loading, setLoading, setQuery, history }\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setError(null);\r\n    setMovie(null)\r\n    setTotalResults(null)\r\n    getData()\r\n  }, [getData]);\r\n  //в кач-ве второго параметра может быть только примитивный обьект\r\n  //при его изменении будет происходить ререндеринг\r\n\r\n  const onPageChange = (page) => { //при изменении стр в pagination\r\n    setCurrPage(page)\r\n    history.push(`/${location}/${page}`) //изменяется url на тек локацию и стр\r\n  }\r\n\r\n  return (\r\n    <MyContext.Provider value={data}>\r\n      <Layout>\r\n\r\n        <Sider\r\n          breakpoint=\"lg\"\r\n          collapsible={true}\r\n          onCollapse={() => setCollapsedMenu(!collapsedMenu)} >\r\n\r\n          <MenuSider\r\n            setPage={setCurrPage}\r\n            setGenre={setGenreList}\r\n            loc={location} />\r\n        </Sider>\r\n\r\n        <Layout className='layout'>\r\n\r\n          <Header className='header'>\r\n            <SearchBox searchHandler={setQuery} />\r\n          </Header>\r\n\r\n          <Content>\r\n\r\n            {error !== null &&\r\n              <div className='error-row' style={{ margin: '20px 0' }}>\r\n                <Empty description={error} type='error' />\r\n              </div>\r\n            }\r\n\r\n            <FilmsContainer />\r\n\r\n\r\n            <div className='modal-detail' >\r\n              <Modal\r\n                title='Details'\r\n                centered\r\n                visible={activateModal}\r\n                onCancel={() => { setActivateModal(false); setShowDetail(null) }}\r\n                footer={null}\r\n              >\r\n                {detailRequest === false ?\r\n                  (<MovieDetail {...detail} />) : (<Loader />)}\r\n              </Modal>\r\n            </div>\r\n\r\n\r\n            <Row>\r\n              <Pagination\r\n                current={parseInt(currPage) || parseInt(urlPage)}\r\n                total={defTotalRes(location, favList, watchList, totalResults)}\r\n                onChange={page => onPageChange(page)}\r\n                hideOnSinglePage={true}\r\n                showSizeChanger={false}\r\n                pageSize={10}\r\n              />\r\n            </Row>\r\n\r\n          </Content>\r\n\r\n          <Footer>\r\n            footer\r\n              </Footer>\r\n              \r\n        </Layout>\r\n      </Layout>\r\n    </MyContext.Provider>\r\n\r\n  )\r\n}\r\n\r\nexport default withRouter(App);\r\n\r\n\r\n","import App from './app.jsx';\nexport default App;","import 'antd/dist/antd.css'\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport App from './components/app';\r\n\r\nReactDOM.render ((\r\n    <Router>\r\n        < App />\r\n    </Router>\r\n), document.getElementById('root'));"],"sourceRoot":""}
{"version":3,"sources":["servises/toggleItem.js","components/movie-card/movie-card.jsx","components/movie-card/index.js"],"names":["toggleItem","item","state","setState","selector","data","setData","newList","itemStorageName","imdbID","includes","localStorage","setItem","JSON","stringify","filter","elem","removeItem","Meta","Card","MovieCard","result","ClickHandler","Title","Poster","Type","isWatch","isFav","useContext","MyContext","watchList","favList","setWatch","setFav","className","cover","alt","src","onClick","actions","color","shape","icon","EyeFilled","EyeOutlined","HeartFilled","HeartOutlined","title","description"],"mappings":"mPAkBeA,EAlBI,SAACC,EAAMC,EAAOC,EAAUC,EAAUC,EAAMC,GAEzD,IAAIC,EACAC,EAAkBJ,EAAW,IAAMH,EAAKQ,OAEvCP,EAAMQ,SAAST,KAClBM,EAAO,sBAAOL,GAAP,CAAcD,IACrBU,aAAaC,QAAQJ,EAAiBK,KAAKC,UAAUb,KAGnDC,EAAMQ,SAAST,KACjBM,EAAUL,EAAMa,QAAO,SAAAC,GAAI,OAAIA,IAASf,KACxCU,aAAaM,WAAWT,IAG1BL,EAASI,ICPHW,EAASC,IAATD,KA2COE,EAzCG,SAAC,GAAmE,IAAjEC,EAAgE,EAAhEA,OAAQC,EAAwD,EAAxDA,aAAcC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,OAAQC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MAAY,EAEhCC,qBAAWC,KAApDC,EAFyE,EAEzEA,UAAWC,EAF8D,EAE9DA,QAASC,EAFqD,EAErDA,SAAUC,EAF2C,EAE3CA,OAEtC,OACI,cAAC,IAAD,CAAMC,UAAU,iBACZC,MAAO,qBACHC,IAAKb,EACLc,IAAgB,QAAXb,EACD,oDACAA,EACJc,QAAS,kBAAMhB,OAEnBiB,QAAS,CACL,mCACc,UAATd,EACG,cAAC,IAAD,CAAKS,UAAU,WAAWM,MAAM,UAAhC,SAA2Cf,IAC3C,cAAC,IAAD,CAAKS,UAAU,WAAWM,MAAM,QAAhC,SAAyCf,MAGjD,cAAC,IAAD,CACIS,UAAWR,EAAU,uBAAyB,gBAC9Ce,MAAM,SACNC,KAAMhB,EAAU,cAACiB,EAAA,EAAD,IAAgB,cAACC,EAAA,EAAD,IAChCN,QAAS,kBAAMtC,EAAWqB,EAAQS,EAAWE,EAAU,WAHY,SAKvE,cAAC,IAAD,CACIE,UAAWP,EAAQ,sBAAwB,eAC3Cc,MAAM,SACNC,KAAMf,EAAQ,cAACkB,EAAA,EAAD,IAAkB,cAACC,EAAA,EAAD,IAChCR,QAAS,kBAAMtC,EAAWqB,EAAQU,EAASE,EAAQ,SAHY,QAtB3E,SA4BI,cAACf,EAAD,CACI6B,MAAOxB,EACPyB,aAAa,EACbV,QAAS,kBAAMhB,UC7ChBF","file":"static/js/5.af4ab7ab.chunk.js","sourcesContent":["const toggleItem = (item, state, setState, selector, data, setData) => {\r\n\r\n  let newList\r\n  let itemStorageName = selector + '_' + item.imdbID\r\n\r\n  if (!state.includes(item)) {\r\n    newList = [...state, item];\r\n    localStorage.setItem(itemStorageName, JSON.stringify(item))\r\n  }\r\n\r\n  if (state.includes(item)) {\r\n    newList = state.filter(elem => elem !== item)\r\n    localStorage.removeItem(itemStorageName)\r\n  }\r\n\r\n  setState(newList)\r\n}\r\n\r\nexport default toggleItem;","import './movie-card.css';\r\nimport { Card, Tag, Button } from 'antd';\r\nimport { HeartOutlined, EyeOutlined, EyeFilled, HeartFilled } from '@ant-design/icons';\r\nimport React, { useContext } from 'react';\r\nimport MyContext from '../../servises/Context'\r\nimport toggleItem from '../../servises/toggleItem';\r\n\r\n\r\nconst { Meta } = Card;\r\n\r\nconst MovieCard = ({ result, ClickHandler, Title, Poster, Type, isWatch, isFav }) => {\r\n\r\n    const { watchList, favList, setWatch, setFav } = useContext(MyContext)\r\n\r\n    return (\r\n        <Card className='card-container'\r\n            cover={<img\r\n                alt={Title}\r\n                src={Poster === 'N/A' ?\r\n                    'https://placehold.it/198x264&text=Image+Not+Found' :\r\n                    Poster}\r\n                onClick={() => ClickHandler()} />}\r\n\r\n            actions={[\r\n                <>\r\n                    {Type === 'movie' ?\r\n                        <Tag className='tag-type' color='magenta'>{Type}</Tag> :\r\n                        <Tag className='tag-type' color='green'>{Type}</Tag>}\r\n                </>,\r\n\r\n                <Button\r\n                    className={isWatch ? 'overlay watch active' : 'overlay watch'} key='watch'\r\n                    shape='circle'\r\n                    icon={isWatch ? <EyeFilled /> : <EyeOutlined />}\r\n                    onClick={() => toggleItem(result, watchList, setWatch, 'watch')} />\r\n                ,\r\n                <Button\r\n                    className={isFav ? 'overlay like active' : 'overlay like'} key='fav'\r\n                    shape='circle'\r\n                    icon={isFav ? <HeartFilled /> : <HeartOutlined />}\r\n                    onClick={() => toggleItem(result, favList, setFav, 'fav')} />\r\n            ]}\r\n        >\r\n            <Meta\r\n                title={Title}\r\n                description={false}\r\n                onClick={() => ClickHandler()} />\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default MovieCard;\r\n\r\n","import MovieCard from './movie-card.jsx';\r\nexport default MovieCard;"],"sourceRoot":""}
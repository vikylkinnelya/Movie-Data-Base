[{"D:\\Вика\\js\\movie-db\\src\\index.js":"1","D:\\Вика\\js\\movie-db\\src\\components\\app\\index.js":"2","D:\\Вика\\js\\movie-db\\src\\components\\app\\app.jsx":"3","D:\\Вика\\js\\movie-db\\src\\servises\\Context.js":"4","D:\\Вика\\js\\movie-db\\src\\components\\loader\\index.js":"5","D:\\Вика\\js\\movie-db\\src\\components\\films-container\\index.js":"6","D:\\Вика\\js\\movie-db\\src\\components\\menu-sider\\index.js":"7","D:\\Вика\\js\\movie-db\\src\\components\\movie-detail\\index.js":"8","D:\\Вика\\js\\movie-db\\src\\components\\search-box\\index.js":"9","D:\\Вика\\js\\movie-db\\src\\components\\menu-sider\\menu-sider.jsx":"10","D:\\Вика\\js\\movie-db\\src\\components\\movie-detail\\movie-detail.jsx":"11","D:\\Вика\\js\\movie-db\\src\\components\\loader\\loader.jsx":"12","D:\\Вика\\js\\movie-db\\src\\components\\films-container\\films-container.jsx":"13","D:\\Вика\\js\\movie-db\\src\\components\\search-box\\search-box.jsx":"14","D:\\Вика\\js\\movie-db\\src\\components\\render-film-card\\index.js":"15","D:\\Вика\\js\\movie-db\\src\\components\\filter-menu\\filter-menu.jsx":"16","D:\\Вика\\js\\movie-db\\src\\components\\render-film-card\\render-film-card.jsx":"17","D:\\Вика\\js\\movie-db\\src\\components\\film-card\\index.js":"18","D:\\Вика\\js\\movie-db\\src\\components\\film-card\\film-card.jsx":"19","D:\\Вика\\js\\movie-db\\src\\servises\\toggleItem.js":"20"},{"size":267,"mtime":1614669762224,"results":"21","hashOfConfig":"22"},{"size":48,"mtime":1610715858880,"results":"23","hashOfConfig":"22"},{"size":6994,"mtime":1614953091402,"results":"24","hashOfConfig":"22"},{"size":98,"mtime":1613739105728,"results":"25","hashOfConfig":"22"},{"size":58,"mtime":1610785656805,"results":"26","hashOfConfig":"22"},{"size":83,"mtime":1614159455724,"results":"27","hashOfConfig":"22"},{"size":68,"mtime":1610785389812,"results":"28","hashOfConfig":"22"},{"size":73,"mtime":1611051525320,"results":"29","hashOfConfig":"22"},{"size":64,"mtime":1610785389816,"results":"30","hashOfConfig":"22"},{"size":2914,"mtime":1614954403860,"results":"31","hashOfConfig":"22"},{"size":1583,"mtime":1612936564389,"results":"32","hashOfConfig":"22"},{"size":233,"mtime":1614164784504,"results":"33","hashOfConfig":"22"},{"size":2161,"mtime":1614953012526,"results":"34","hashOfConfig":"22"},{"size":1868,"mtime":1614230918881,"results":"35","hashOfConfig":"22"},{"size":84,"mtime":1614669762221,"results":"36","hashOfConfig":"22"},{"size":1333,"mtime":1614085001395,"results":"37","hashOfConfig":"22"},{"size":3075,"mtime":1614945921468,"results":"38","hashOfConfig":"22"},{"size":65,"mtime":1614152798318,"results":"39","hashOfConfig":"22"},{"size":2830,"mtime":1614775953121,"results":"40","hashOfConfig":"22"},{"size":588,"mtime":1613979716068,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1ccfoan",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"D:\\Вика\\js\\movie-db\\src\\index.js",[],["86","87"],"D:\\Вика\\js\\movie-db\\src\\components\\app\\index.js",[],"D:\\Вика\\js\\movie-db\\src\\components\\app\\app.jsx",["88","89","90"],"D:\\Вика\\js\\movie-db\\src\\servises\\Context.js",[],"D:\\Вика\\js\\movie-db\\src\\components\\loader\\index.js",[],"D:\\Вика\\js\\movie-db\\src\\components\\films-container\\index.js",[],"D:\\Вика\\js\\movie-db\\src\\components\\menu-sider\\index.js",[],"D:\\Вика\\js\\movie-db\\src\\components\\movie-detail\\index.js",[],"D:\\Вика\\js\\movie-db\\src\\components\\search-box\\index.js",[],"D:\\Вика\\js\\movie-db\\src\\components\\menu-sider\\menu-sider.jsx",[],"D:\\Вика\\js\\movie-db\\src\\components\\movie-detail\\movie-detail.jsx",[],"D:\\Вика\\js\\movie-db\\src\\components\\loader\\loader.jsx",[],"D:\\Вика\\js\\movie-db\\src\\components\\films-container\\films-container.jsx",["91","92","93","94"],"import React from 'react';\r\nimport { BrowserRouter as Route, Switch, Redirect, withRouter, useParams, useLocation, useRouteMatch } from 'react-router-dom';\r\nimport MyContext from '../../servises/Context';\r\nimport RenderFilmCard from '../render-film-card'\r\n\r\nconst FilmsContainer = ({page}) => {\r\n\r\n    //let location = useLocation();\r\n    \r\n\r\n  \r\n\r\n    return (\r\n        <MyContext.Consumer>\r\n            { data => {\r\n\r\n                const { movie, favList, watchList, getDataRequest, setMovie, yearValue } = data\r\n\r\n                const doFirstRequest = (genre = ['movie', 'series']) => {\r\n                    const themes = ['love', 'hate', 'sex', 'live', 'death', 'sad', 'earth', 'moon', 'sun', 'war', 'rage']\r\n                    const randomTheme = themes[Math.floor(Math.random() * themes.length)]\r\n                    const randomPage = Math.floor(Math.random() * (9 - 1) + 1)\r\n                    return getDataRequest('s', randomTheme, setMovie, randomPage, genre, yearValue)\r\n                }\r\n\r\n                return (\r\n                    <>\r\n                        <Switch>\r\n                            <Route path='/main/:page'>\r\n                                <RenderFilmCard state={movie} />\r\n                            </Route>\r\n                            <Route path='/favorites/:page'>\r\n                                <RenderFilmCard state={favList} />\r\n                            </Route>\r\n                            <Route path='/to-watch/:page'>\r\n                                <RenderFilmCard state={watchList} />\r\n                            </Route>\r\n                            <Route path='/films/:page'>\r\n                                <RenderFilmCard state={movie} />\r\n                            </Route>\r\n                            <Route path='/serials/:page'>\r\n                                <RenderFilmCard state={movie} />\r\n                            </Route>\r\n                            <Redirect from='/' to='/main/:page' />\r\n                        </Switch>\r\n                    </>\r\n                )\r\n            }}\r\n        </MyContext.Consumer>\r\n    )\r\n}\r\n\r\nexport default withRouter(FilmsContainer);","D:\\Вика\\js\\movie-db\\src\\components\\search-box\\search-box.jsx",[],"D:\\Вика\\js\\movie-db\\src\\components\\render-film-card\\index.js",[],"D:\\Вика\\js\\movie-db\\src\\components\\filter-menu\\filter-menu.jsx",[],"D:\\Вика\\js\\movie-db\\src\\components\\render-film-card\\render-film-card.jsx",["95","96","97","98","99","100","101","102"],"import React from 'react';\r\nimport { BrowserRouter as Route, Switch, useParams, useLocation, useRouteMatch } from 'react-router-dom';\r\nimport MyContext from '../../servises/Context';\r\nimport FilmCard from '../film-card/'\r\nimport { Row, Pagination } from 'antd';\r\nimport './render-film-card.css'\r\n\r\n\r\nconst RenderFilmCard = ({ state }) => {\r\n\r\n    return (\r\n        <MyContext.Consumer>\r\n            { data => {\r\n\r\n                const { getDataRequest, setActivateModal, setDetailRequest, setShowDetail, movie, favList, watchList, genreList, yearValue, currPage, setCurrPage, totalResults, setTotalResults, q, setMovie } = data\r\n                \r\n                const filmClickHandler = (item) => { //обработчик события клика. при клике на карточку\r\n                    setActivateModal(true); //показать модалку. эл импортируется из другого компонента\r\n                    setDetailRequest(true); //обновить стейт с состоянием запроса к серверу\r\n                    getDataRequest('i', item.imdbID, setShowDetail, currPage, genreList, yearValue) //запрос к серверу за деталями фильма\r\n                }\r\n\r\n                return (\r\n                    <>\r\n                        <Row className='cards-row'>\r\n                            {state !== null && state.length > 0 && state.map((result) => (\r\n                                <FilmCard\r\n                                    isActive={favList.includes(result)} //активность кнопки\r\n                                    isWatch={watchList.includes(result)}\r\n\r\n                                    ClickHandler={() => filmClickHandler(result)}\r\n\r\n                                    key={result.imdbID} //присв ключ обьекту из списка в соотв с его номером в базе \r\n                                    result={result}\r\n                                    {...result}\r\n                                />\r\n                            ))}\r\n                        </Row>\r\n                        <Row>\r\n                            <Pagination\r\n                                defaultCurrent = {currPage}\r\n                                current={currPage} //берем из стейта, кот обновл\r\n                                total={state === movie ? totalResults : state.length}\r\n                                hideOnSinglePage={true} //спрятать если страница одна\r\n                                showSizeChanger={false} //выбор кол-ва отображаемых элементов на странице\r\n                                pageSize={10}\r\n                                onChange={page => setCurrPage(page)}\r\n                                \r\n                            />\r\n                        </Row>\r\n                    </>\r\n                )\r\n            }}\r\n        </MyContext.Consumer>\r\n    )\r\n\r\n}\r\n\r\nexport default RenderFilmCard;","D:\\Вика\\js\\movie-db\\src\\components\\film-card\\index.js",[],"D:\\Вика\\js\\movie-db\\src\\components\\film-card\\film-card.jsx",["103","104","105","106","107"],"import React from 'react';\r\nimport { BrowserRouter as Route, Switch, useParams, useLocation, useRouteMatch } from 'react-router-dom';\r\n\r\nimport { Row, Col, Card, Tag, Button } from 'antd';\r\nimport toggleItem from '../../servises/toggleItem';\r\nimport MyContext from '../../servises/Context'\r\nimport { HeartOutlined, EyeOutlined, EyeFilled, HeartFilled } from '@ant-design/icons'\r\nimport './film-card.css'\r\nconst { Meta } = Card;\r\n\r\nconst FilmCard = ({ result, ClickHandler, isActive, isWatch, Title, Poster, Type }) => {\r\n\r\n    return (\r\n        <MyContext.Consumer>\r\n            {data => {\r\n                const { watchList, setWatch, favList, setFav } = data\r\n                return (\r\n                    <div className='card-container'>\r\n                        <Card\r\n                            cover={<img\r\n                                alt={Title}\r\n                                src={Poster === 'N/A' ?\r\n                                    'https://placehold.it/198x264&text=Image+Not+Found' :\r\n                                    Poster}\r\n                                onClick={() => ClickHandler()} />} >\r\n                            <Meta\r\n                                title={Title}\r\n                                description={false}\r\n                                onClick={() => ClickHandler()} />\r\n                            <Row className='gutter-row'>\r\n                                <Col>\r\n                                    {Type === 'movie' ?\r\n                                        <Tag color='magenta'>{Type}</Tag> :\r\n                                        <Tag color='green'>{Type}</Tag>}\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className='overlay' >\r\n                                <Col className={isWatch ? 'overlay watch active' : 'overlay watch'}>\r\n                                    <Button\r\n                                        shape='circle'\r\n                                        icon={isWatch ? <EyeFilled /> : <EyeOutlined />}\r\n                                        onClick={() => toggleItem(result, watchList, setWatch)} />\r\n                                </Col>\r\n                                <Col className={isActive ? 'overlay like active' : 'overlay like'}>\r\n                                    <Button\r\n                                        shape='circle'\r\n                                        icon={isActive ? <HeartFilled /> : <HeartOutlined />}\r\n                                        onClick={() => toggleItem(result, favList, setFav)} />\r\n                                </Col>\r\n                            </Row>\r\n                        </Card>\r\n                    </div>\r\n                )\r\n            }}\r\n        </MyContext.Consumer>\r\n    )\r\n}\r\n\r\nexport default FilmCard;\r\n\r\n","D:\\Вика\\js\\movie-db\\src\\servises\\toggleItem.js",[],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":2,"column":27,"nodeType":"114","messageId":"115","endLine":2,"endColumn":33},{"ruleId":"112","severity":1,"message":"116","line":2,"column":35,"nodeType":"114","messageId":"115","endLine":2,"endColumn":46},{"ruleId":"112","severity":1,"message":"117","line":16,"column":18,"nodeType":"114","messageId":"115","endLine":16,"endColumn":21},{"ruleId":"112","severity":1,"message":"118","line":2,"column":64,"nodeType":"114","messageId":"115","endLine":2,"endColumn":73},{"ruleId":"112","severity":1,"message":"116","line":2,"column":75,"nodeType":"114","messageId":"115","endLine":2,"endColumn":86},{"ruleId":"112","severity":1,"message":"119","line":2,"column":88,"nodeType":"114","messageId":"115","endLine":2,"endColumn":101},{"ruleId":"112","severity":1,"message":"120","line":19,"column":23,"nodeType":"114","messageId":"115","endLine":19,"endColumn":37},{"ruleId":"112","severity":1,"message":"121","line":2,"column":27,"nodeType":"114","messageId":"115","endLine":2,"endColumn":32},{"ruleId":"112","severity":1,"message":"122","line":2,"column":34,"nodeType":"114","messageId":"115","endLine":2,"endColumn":40},{"ruleId":"112","severity":1,"message":"118","line":2,"column":42,"nodeType":"114","messageId":"115","endLine":2,"endColumn":51},{"ruleId":"112","severity":1,"message":"116","line":2,"column":53,"nodeType":"114","messageId":"115","endLine":2,"endColumn":64},{"ruleId":"112","severity":1,"message":"119","line":2,"column":66,"nodeType":"114","messageId":"115","endLine":2,"endColumn":79},{"ruleId":"112","severity":1,"message":"123","line":15,"column":178,"nodeType":"114","messageId":"115","endLine":15,"endColumn":193},{"ruleId":"112","severity":1,"message":"124","line":15,"column":195,"nodeType":"114","messageId":"115","endLine":15,"endColumn":196},{"ruleId":"112","severity":1,"message":"125","line":15,"column":198,"nodeType":"114","messageId":"115","endLine":15,"endColumn":206},{"ruleId":"112","severity":1,"message":"121","line":2,"column":27,"nodeType":"114","messageId":"115","endLine":2,"endColumn":32},{"ruleId":"112","severity":1,"message":"122","line":2,"column":34,"nodeType":"114","messageId":"115","endLine":2,"endColumn":40},{"ruleId":"112","severity":1,"message":"118","line":2,"column":42,"nodeType":"114","messageId":"115","endLine":2,"endColumn":51},{"ruleId":"112","severity":1,"message":"116","line":2,"column":53,"nodeType":"114","messageId":"115","endLine":2,"endColumn":64},{"ruleId":"112","severity":1,"message":"119","line":2,"column":66,"nodeType":"114","messageId":"115","endLine":2,"endColumn":79},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'useLocation' is defined but never used.","'Row' is defined but never used.","'useParams' is defined but never used.","'useRouteMatch' is defined but never used.","'doFirstRequest' is assigned a value but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'setTotalResults' is assigned a value but never used.","'q' is assigned a value but never used.","'setMovie' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
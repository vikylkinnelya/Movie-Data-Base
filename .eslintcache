[{"D:\\Вика\\js\\movie-db\\src\\index.js":"1","D:\\Вика\\js\\movie-db\\src\\components\\app\\index.js":"2","D:\\Вика\\js\\movie-db\\src\\components\\app\\app.jsx":"3","D:\\Вика\\js\\movie-db\\src\\components\\pages\\film-page.jsx":"4","D:\\Вика\\js\\movie-db\\src\\components\\pages\\main-page.jsx":"5","D:\\Вика\\js\\movie-db\\src\\components\\pages\\series-page.jsx":"6","D:\\Вика\\js\\movie-db\\src\\components\\pages\\watch-page.jsx":"7","D:\\Вика\\js\\movie-db\\src\\components\\pages\\fav-page.jsx":"8","D:\\Вика\\js\\movie-db\\src\\components\\loader\\index.js":"9","D:\\Вика\\js\\movie-db\\src\\components\\movie-detail\\index.js":"10","D:\\Вика\\js\\movie-db\\src\\components\\search-box\\index.js":"11","D:\\Вика\\js\\movie-db\\src\\components\\items-box\\index.js":"12","D:\\Вика\\js\\movie-db\\src\\components\\menu-sider\\index.js":"13","D:\\Вика\\js\\movie-db\\src\\components\\loader\\loader.jsx":"14","D:\\Вика\\js\\movie-db\\src\\components\\movie-detail\\movie-detail.jsx":"15","D:\\Вика\\js\\movie-db\\src\\components\\menu-sider\\menu-sider.jsx":"16","D:\\Вика\\js\\movie-db\\src\\components\\items-box\\items-box.jsx":"17","D:\\Вика\\js\\movie-db\\src\\components\\search-box\\search-box.jsx":"18"},{"size":163,"mtime":1612171431100,"results":"19","hashOfConfig":"20"},{"size":48,"mtime":1610715858880,"results":"21","hashOfConfig":"20"},{"size":7719,"mtime":1612792366146,"results":"22","hashOfConfig":"20"},{"size":477,"mtime":1612769287483,"results":"23","hashOfConfig":"20"},{"size":1744,"mtime":1612793130841,"results":"24","hashOfConfig":"20"},{"size":482,"mtime":1612769287514,"results":"25","hashOfConfig":"20"},{"size":1540,"mtime":1612794108784,"results":"26","hashOfConfig":"20"},{"size":1373,"mtime":1612794105149,"results":"27","hashOfConfig":"20"},{"size":58,"mtime":1610785656805,"results":"28","hashOfConfig":"20"},{"size":73,"mtime":1611051525320,"results":"29","hashOfConfig":"20"},{"size":64,"mtime":1610785389816,"results":"30","hashOfConfig":"20"},{"size":65,"mtime":1611822412400,"results":"31","hashOfConfig":"20"},{"size":68,"mtime":1610785389812,"results":"32","hashOfConfig":"20"},{"size":233,"mtime":1610786620909,"results":"33","hashOfConfig":"20"},{"size":1575,"mtime":1611051525353,"results":"34","hashOfConfig":"20"},{"size":1877,"mtime":1612792335219,"results":"35","hashOfConfig":"20"},{"size":2727,"mtime":1612786808694,"results":"36","hashOfConfig":"20"},{"size":728,"mtime":1612791388729,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1ccfoan",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"D:\\Вика\\js\\movie-db\\src\\index.js",[],["81","82"],"D:\\Вика\\js\\movie-db\\src\\components\\app\\index.js",[],"D:\\Вика\\js\\movie-db\\src\\components\\app\\app.jsx",["83","84"],"import React, { useEffect, useState } from 'react';\r\nimport SearchBox from '../search-box';\r\nimport MenuSider from '../menu-sider';\r\nimport Loader from '../loader';\r\nimport ItemsBox from '../items-box';\r\nimport MovieDetail from '../movie-detail';\r\nimport FavPage from '../pages/fav-page';\r\nimport FilmPage from '../pages/film-page';\r\nimport MainPage from '../pages/main-page';\r\nimport SeriesPage from '../pages/series-page';\r\nimport WatchPage from '../pages/watch-page';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport { Layout, Row, Modal, Alert, } from 'antd';\r\nimport 'antd/dist/antd.css'\r\nimport './app.css';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nconst API_KEY = 'eb9d8a81';\r\n\r\nfunction App() {\r\n\r\n  const [movie, setMovie] = useState(null); //будет хранить обьект ответа от сервера\r\n  const [error, setError] = useState(null); //будет обновляться только при ошибке\r\n  const [loading, setLoading] = useState(false); //обект ожидания\r\n  const [q, setQuery] = useState('love'); //хранит искомые параметры запроса \r\n\r\n  const [activateModal, setActivateModal] = useState(false); //помогает закрыть модал компонент\r\n  const [detail, setShowDetail] = useState(false); //собирает детали фильма\r\n  const [detailRequest, setDetailRequest] = useState(false); //отображение загрузчика\r\n\r\n  const [favList, setFav] = useState([]); //список избранных\r\n  const [watchList, setWatch] = useState([]); //список к просмотру\r\n\r\n  const [collapsed, setCollapsed] = useState(false); //отобр меню развернут или свернут\r\n\r\n  const toggleFav = (item) => {\r\n    let newFavList\r\n    if (favList.includes(item)) {\r\n      newFavList = favList.filter(fav => fav.imdbID !== item.imdbID) //в новый список попадают все кроме выбранного на удаление\r\n    }\r\n    if (!favList.includes(item)) {\r\n      newFavList = [...favList, item]; //новый список сост из старых эл и нового выбранного\r\n    }\r\n    setFav(newFavList) //перезаписываем обьект списка избранных\r\n  }\r\n  const toggleWatch = (item) => {\r\n    let newWatchList\r\n    if (watchList.includes(item)) {\r\n      newWatchList = watchList.filter(watch => watch.imdbID !== item.imdbID)\r\n    }\r\n    if (!watchList.includes(item)) {\r\n      newWatchList = [...watchList, item];\r\n    }\r\n    setWatch(newWatchList)\r\n  }\r\n\r\n  const getMovieReqest = async (q) => { //запрос на сервер\r\n    const url = `http://www.omdbapi.com/?s=${q}&apikey=${API_KEY}`\r\n\r\n    const response = await fetch(url); //запрос к серверу\r\n    const responseJson = await response.json();\r\n\r\n    if (responseJson.Response === 'False') { //если нет ответа\r\n      setError(response.Error) //записать в обьект ошибки ошибку\r\n    }\r\n    if (responseJson.Search) {\r\n      setMovie(responseJson.Search) //записать в обьект с данными полученный ответ\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  /* useEffect(() => {\r\n    setLoading(true); //ждём\r\n    setError(null); //обнуление ошибки\r\n    setMovie(null); //обнуление обьекта данных\r\n    getMovieReqest(q);\r\n  }, [q]); //ищем черещ getmovie с параметрами q */\r\n\r\n\r\n  return (\r\n    <Router>\r\n      <div className='App'>\r\n        <Layout className='Layout'>\r\n          <Sider /* боковая панель */\r\n            collapsible /* сворачивающаяся */\r\n            onCollapse={() => setCollapsed(!collapsed)}\r\n          >\r\n            <MenuSider/>\r\n          </Sider>\r\n          <Layout className='layout'>\r\n            <Header>\r\n              <SearchBox\r\n                searchHandler={setQuery} /> {/* поиск по введенным параметрам кот сохр в обьект */}\r\n            </Header>\r\n            <Content>\r\n              <Row justify='center'>\r\n                {loading && <Loader />} {/* ожидание из стейта и иконка загрузки */}\r\n                {error !== null &&\r\n                  <div style={{ margin: '20px 0' }}>\r\n                    <Alert message={error} type='error' />\r\n                  </div>\r\n                }\r\n\r\n                {/* <ItemsBox\r\n                    data={movie} //передаем обьект с данными на уровень ниже\r\n\r\n                    ShowDetail={setShowDetail}\r\n                    DetailRequest={setDetailRequest}\r\n                    ActivateModal={setActivateModal}\r\n\r\n                    ToggleFav={toggleFav}\r\n                    ToggleWatch={toggleWatch}\r\n                  /> */}\r\n                <Switch>\r\n                  \r\n                  <Route path='/main' >\r\n                    <MainPage\r\n                      movie={movie}  //передаем обьект с данными на уровень ниже\r\n                      setLoading={setLoading}\r\n                      setError={setError}\r\n                      setMovie={setMovie}\r\n                      getMovieReqest={getMovieReqest}\r\n                      q={q}\r\n\r\n                      setShowDetail={setShowDetail}\r\n                      setDetailRequest={setDetailRequest}\r\n                      setActivateModal={setActivateModal}\r\n\r\n                      toggleFav={toggleFav}\r\n                      toggleWatch={toggleWatch}\r\n\r\n                      favList={favList}\r\n                      watchList={watchList}\r\n                    />\r\n                  </Route>\r\n                  <Route path='/favorites'>\r\n                    <FavPage\r\n                      setShowDetail={setShowDetail}\r\n                      setDetailRequest={setDetailRequest}\r\n                      setActivateModal={setActivateModal}\r\n\r\n                      toggleFav={toggleFav}\r\n                      toggleWatch={toggleWatch}\r\n\r\n                      favList={favList}\r\n                      watchList={watchList}\r\n                    />\r\n                  </Route>\r\n                  <Route path='/to-watch'>\r\n                    <WatchPage\r\n                      setShowDetail={setShowDetail}\r\n                      setDetailRequest={setDetailRequest}\r\n                      setActivateModal={setActivateModal}\r\n\r\n                      toggleFav={toggleFav}\r\n                      toggleWatch={toggleWatch}\r\n\r\n                      favList={favList}\r\n                      watchList={watchList} />\r\n                  </Route>\r\n                  <Route path='/films'>\r\n                    <FilmPage />\r\n                  </Route>\r\n                  <Route path='/serials'>\r\n                    <SeriesPage />\r\n                  </Route>\r\n                </Switch>\r\n              </Row>\r\n\r\n\r\n              <Modal\r\n                title='Detail'\r\n                centered\r\n                visible={activateModal}\r\n                onCancel={() => setActivateModal(false)}\r\n                footer={null}\r\n              >\r\n                {detailRequest === false ? /* если получен ответ от сервера с деталями */\r\n                  (<MovieDetail {...detail} />) : /* показать детали */\r\n                  (<Loader />)\r\n                }\r\n              </Modal>\r\n\r\n\r\n            </Content>\r\n            <Footer>\r\n              footer\r\n        </Footer>\r\n          </Layout>\r\n\r\n        </Layout>\r\n      </div >\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","D:\\Вика\\js\\movie-db\\src\\components\\pages\\film-page.jsx",["85"],"import React from 'react';\r\nimport ItemsBox from '../items-box/items-box';\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nconst FilmPage = ({ data,movie, favList, watchList, imdbID, ShowDetail, DetailRequest, ActivateModal, ToggleFav, ToggleWatch }) => {\r\n    return(\r\n        <ItemsBox\r\n            data={data} //передаем обьект с данными на уровень ниже\r\n            favList = {favList}\r\n\r\n        />\r\n    )\r\n}\r\n\r\nexport default FilmPage","D:\\Вика\\js\\movie-db\\src\\components\\pages\\main-page.jsx",["86","87","88"],"import React, { useEffect, useState } from 'react';\r\nimport ItemsBox from '../items-box/items-box';\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nconst MainPage = ({ movie, setLoading, setError, setMovie, getMovieReqest, q, setShowDetail, setDetailRequest, setActivateModal, toggleFav, toggleWatch, favList, watchList }) => {\r\n\r\n    useEffect(() => {\r\n        setLoading(true); //ждём\r\n        setError(null); //обнуление ошибки\r\n        setMovie(null); //обнуление обьекта данных\r\n        getMovieReqest(q);\r\n    }, [q]); //ищем черещ getmovie с параметрами q\r\n\r\n    const data = movie;\r\n    const ShowDetail = setShowDetail\r\n    const DetailRequest = setDetailRequest\r\n    const ActivateModal = setActivateModal\r\n\r\n    return (\r\n        <>\r\n            { data !== null && data.length > 0 && data.map((result) => ( /* перебор обьекта даты */\r\n                <div\r\n                    key={result.imdbID} //присв ключ обьекту из списка в соотв с его номером в базе \r\n                    className='card-container' >\r\n\r\n                    <ItemsBox\r\n                        result={result}\r\n\r\n                        ShowDetail={ShowDetail}\r\n                        DetailRequest={DetailRequest}\r\n                        ActivateModal={ActivateModal}\r\n\r\n                        toggleFav={toggleFav}\r\n                        toggleWatch={toggleWatch}\r\n\r\n                        isActive={favList.includes(result)}\r\n                        isWatch={watchList.includes(result)}\r\n\r\n                        {...result}\r\n                    /></div>\r\n\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainPage","D:\\Вика\\js\\movie-db\\src\\components\\pages\\series-page.jsx",["89"],"import React from 'react';\r\nimport ItemsBox from '../items-box/items-box';\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nconst SeriesPage = ({ data, movie, favList, watchList, imdbID, ShowDetail, DetailRequest, ActivateModal, ToggleFav, ToggleWatch }) => {\r\n    return(\r\n        <ItemsBox\r\n            data={data} //передаем обьект с данными на уровень ниже\r\n            favList = {favList}\r\n\r\n        />\r\n    )\r\n}\r\n\r\nexport default SeriesPage","D:\\Вика\\js\\movie-db\\src\\components\\pages\\watch-page.jsx",["90"],"D:\\Вика\\js\\movie-db\\src\\components\\pages\\fav-page.jsx",["91"],"D:\\Вика\\js\\movie-db\\src\\components\\loader\\index.js",[],"D:\\Вика\\js\\movie-db\\src\\components\\movie-detail\\index.js",[],"D:\\Вика\\js\\movie-db\\src\\components\\search-box\\index.js",[],"D:\\Вика\\js\\movie-db\\src\\components\\items-box\\index.js",[],"D:\\Вика\\js\\movie-db\\src\\components\\menu-sider\\index.js",[],"D:\\Вика\\js\\movie-db\\src\\components\\loader\\loader.jsx",[],"D:\\Вика\\js\\movie-db\\src\\components\\movie-detail\\movie-detail.jsx",[],"D:\\Вика\\js\\movie-db\\src\\components\\menu-sider\\menu-sider.jsx",["92"],"import React, { useState } from 'react';\r\nimport { Menu } from 'antd';\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport 'antd/dist/antd.css'\r\nimport './menu-sider.css'\r\nimport {\r\n    DatabaseOutlined,\r\n    VideoCameraOutlined,\r\n    EyeOutlined,\r\n    HeartOutlined,\r\n} from '@ant-design/icons'\r\n\r\nconst MenuSider = () => {\r\n\r\n    return (\r\n        <>\r\n            <Menu\r\n                defaultSelectedKeys={['1']}\r\n                mode=\"inline\"\r\n                theme=\"dark\"\r\n            >\r\n                <Menu.Item\r\n                    key=\"1\"\r\n                    className=\"customclass\"\r\n                    icon={<DatabaseOutlined />} >\r\n                    movie data base`\r\n                    <Link to='/main' />\r\n                </Menu.Item>\r\n\r\n                <Menu.Item\r\n                    key=\"2\"\r\n                    className=\"customclass\"\r\n                    icon={<VideoCameraOutlined />}>\r\n                    movies\r\n                    <Link to='/films' />\r\n                </Menu.Item>\r\n\r\n                <Menu.Item\r\n                    key=\"3\"\r\n                    className=\"customclass\"\r\n                    icon={<VideoCameraOutlined />}>\r\n                    serials\r\n                    <Link to='/serials' />\r\n                </Menu.Item>\r\n\r\n                <Menu.Item\r\n                    key=\"4\"\r\n                    className=\"customclass\"\r\n                    icon={<HeartOutlined />}>\r\n                    liked\r\n                    <Link to='/favorites' />\r\n                </Menu.Item>\r\n\r\n                <Menu.Item\r\n                    key=\"5\"\r\n                    className=\"customclass\"\r\n                    icon={<EyeOutlined />}>\r\n                    watchlist\r\n                    <Link to='/to-watch' />\r\n                </Menu.Item>\r\n\r\n            </Menu>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(MenuSider);","D:\\Вика\\js\\movie-db\\src\\components\\items-box\\items-box.jsx",["93","94"],"import React, { useEffect, useState } from 'react';\r\nimport { Row, Col, Card, Tag, Button } from 'antd';\r\nimport { HeartOutlined, FolderViewOutlined } from '@ant-design/icons'\r\nimport './items-box.css'\r\n\r\nconst { Meta } = Card;\r\n\r\nconst ItemsBox = ({ result, isActive, isWatch, toggleFav, toggleWatch, ShowDetail, DetailRequest, ActivateModal, Title, Poster, Type, imdbID }) => {\r\n\r\n    const itemClickHandler = () => { //обработчик события клика. при клике на карточку\r\n        ActivateModal(true); //показать модалку. эл импортируется из другого компонента\r\n        DetailRequest(true); //запрос к серверу за деталями фильма\r\n    }\r\n\r\n    const classNameFav = isActive ? 'overlay like active' : 'overlay like'\r\n    const classNameWatch = isWatch ? 'overlay watch active' : 'overlay watch'\r\n\r\n    return (\r\n        <>\r\n            <div className='overlay' >\r\n                <Button\r\n                    className={classNameFav}\r\n                    type=\"primary\"\r\n                    shape='circle'\r\n                    icon={<HeartOutlined />}\r\n                    onClick={() => toggleFav(result)} //при клике на кнопку вызывается переданная сверху функция добавления данного обьекта в обьект с избранными\r\n                >\r\n                </Button>\r\n                <Button\r\n                    className={classNameWatch}\r\n                    type=\"primary\"\r\n                    shape='circle'\r\n                    icon={<FolderViewOutlined />}\r\n                    onClick={() => toggleWatch(result)}\r\n                >\r\n                </Button>\r\n            </div>\r\n            <Card /* карточка  с фото */\r\n                cover={\r\n                    <img\r\n                        alt={Title}\r\n                        src={Poster === 'N/A' ?\r\n                            'https://placehold.it/198x264&text=Image+Not+Found' :\r\n                            Poster}\r\n                        onClick={() => itemClickHandler()}\r\n                    />}\r\n            >\r\n                <Meta /* краткая информация */\r\n                    title={Title}\r\n                    description={false}\r\n                />\r\n                <Row className='gutter-row'>\r\n                    <Col>\r\n                        {Type === 'movie' ?\r\n                            <Tag color='magenta'>{Type}</Tag> :\r\n                            <Tag color='green'>{Type}</Tag>}\r\n                    </Col>\r\n                </Row>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ItemsBox;","D:\\Вика\\js\\movie-db\\src\\components\\search-box\\search-box.jsx",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":26},{"ruleId":"99","severity":1,"message":"103","line":5,"column":8,"nodeType":"101","messageId":"102","endLine":5,"endColumn":16},{"ruleId":"99","severity":1,"message":"104","line":3,"column":10,"nodeType":"101","messageId":"102","endLine":3,"endColumn":20},{"ruleId":"99","severity":1,"message":"105","line":1,"column":28,"nodeType":"101","messageId":"102","endLine":1,"endColumn":36},{"ruleId":"99","severity":1,"message":"104","line":3,"column":10,"nodeType":"101","messageId":"102","endLine":3,"endColumn":20},{"ruleId":"106","severity":1,"message":"107","line":12,"column":8,"nodeType":"108","endLine":12,"endColumn":11,"suggestions":"109"},{"ruleId":"99","severity":1,"message":"104","line":3,"column":10,"nodeType":"101","messageId":"102","endLine":3,"endColumn":20},{"ruleId":"99","severity":1,"message":"104","line":3,"column":10,"nodeType":"101","messageId":"102","endLine":3,"endColumn":20},{"ruleId":"99","severity":1,"message":"104","line":3,"column":10,"nodeType":"101","messageId":"102","endLine":3,"endColumn":20},{"ruleId":"99","severity":1,"message":"105","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":25},{"ruleId":"99","severity":1,"message":"100","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":26},{"ruleId":"99","severity":1,"message":"105","line":1,"column":28,"nodeType":"101","messageId":"102","endLine":1,"endColumn":36},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'ItemsBox' is defined but never used.","'withRouter' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getMovieReqest', 'setError', 'setLoading', and 'setMovie'. Either include them or remove the dependency array. If 'setLoading' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["112"],"no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},"Update the dependencies array to be: [getMovieReqest, q, setError, setLoading, setMovie]",{"range":"115","text":"116"},[521,524],"[getMovieReqest, q, setError, setLoading, setMovie]"]
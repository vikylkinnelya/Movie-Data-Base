[{"D:\\WORK\\projects\\movie-db\\src\\index.js":"1","D:\\WORK\\projects\\movie-db\\src\\components\\app\\index.js":"2","D:\\WORK\\projects\\movie-db\\src\\components\\app\\app.jsx":"3","D:\\WORK\\projects\\movie-db\\src\\components\\menu-sider\\index.js":"4","D:\\WORK\\projects\\movie-db\\src\\components\\search-box\\index.js":"5","D:\\WORK\\projects\\movie-db\\src\\components\\loader\\index.js":"6","D:\\WORK\\projects\\movie-db\\src\\components\\favPage\\index.js":"7","D:\\WORK\\projects\\movie-db\\src\\components\\movie-detail\\index.js":"8","D:\\WORK\\projects\\movie-db\\src\\components\\items-box\\index.js":"9","D:\\WORK\\projects\\movie-db\\src\\components\\menu-sider\\menu-sider.jsx":"10","D:\\WORK\\projects\\movie-db\\src\\components\\loader\\loader.jsx":"11","D:\\WORK\\projects\\movie-db\\src\\components\\movie-detail\\movie-detail.jsx":"12","D:\\WORK\\projects\\movie-db\\src\\components\\items-box\\items-box.jsx":"13","D:\\WORK\\projects\\movie-db\\src\\components\\search-box\\search-box.jsx":"14","D:\\WORK\\projects\\movie-db\\src\\components\\favPage\\fav-box.jsx":"15"},{"size":163,"mtime":1612000627898,"results":"16","hashOfConfig":"17"},{"size":49,"mtime":1610633399536,"results":"18","hashOfConfig":"17"},{"size":6308,"mtime":1612032501712,"results":"19","hashOfConfig":"17"},{"size":68,"mtime":1610736531231,"results":"20","hashOfConfig":"17"},{"size":64,"mtime":1610734584570,"results":"21","hashOfConfig":"17"},{"size":58,"mtime":1610807032664,"results":"22","hashOfConfig":"17"},{"size":55,"mtime":1611850209374,"results":"23","hashOfConfig":"17"},{"size":73,"mtime":1610808908126,"results":"24","hashOfConfig":"17"},{"size":65,"mtime":1611850209434,"results":"25","hashOfConfig":"17"},{"size":2208,"mtime":1612000560000,"results":"26","hashOfConfig":"17"},{"size":233,"mtime":1610807032673,"results":"27","hashOfConfig":"17"},{"size":1575,"mtime":1610866756894,"results":"28","hashOfConfig":"17"},{"size":3852,"mtime":1612030461212,"results":"29","hashOfConfig":"17"},{"size":746,"mtime":1611859180032,"results":"30","hashOfConfig":"17"},{"size":263,"mtime":1611859460281,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"jf63mq",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":1,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"D:\\WORK\\projects\\movie-db\\src\\index.js",[],["65","66"],"D:\\WORK\\projects\\movie-db\\src\\components\\app\\index.js",[],"D:\\WORK\\projects\\movie-db\\src\\components\\app\\app.jsx",["67","68","69","70","71","72","73"],"import React, { useEffect, useState } from 'react';\r\nimport SearchBox from '../search-box';\r\nimport MenuSider from '../menu-sider';\r\nimport Loader from '../loader';\r\nimport ItemsBox from '../items-box';\r\nimport MovieDetail from '../movie-detail';\r\n\r\n\r\nimport {\r\n  Layout,\r\n  Row,\r\n  Modal,\r\n  Alert,\r\n} from 'antd';\r\nimport 'antd/dist/antd.css'\r\n\r\nimport './app.css';\r\n\r\n//lessc src/components/app/main.less node_modules/antd/dist/antd.css --js\r\n\r\nconst API_KEY = 'eb9d8a81';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nfunction App() {\r\n\r\n  const [data, setData] = useState(null); //будет хранить обьект ответа от сервера\r\n  const [error, setError] = useState(null); //будет обновляться только при ошибке\r\n  const [loading, setLoading] = useState(false); //обект ожидания\r\n  const [q, setQuery] = useState('love'); //хранит искомые параметры запроса \r\n\r\n  const [favList, setFav] = useState([]); //список избранных\r\n  const [watchList, setWatch] = useState([]); //список к просмотру\r\n  const [favBtn, setFavBtn] = useState(false); //активность кнопки лайков\r\n  const [watchBtn, setWatchBtn] = useState(false); //активн кнопки просмотреть\r\n\r\n\r\n  const [activateModal, setActivateModal] = useState(false); //помогает закрыть модал компонент\r\n  const [detail, setShowDetail] = useState(false); //собирает детали фильма\r\n  const [detailRequest, setDetailRequest] = useState(false); //отображение загрузчика\r\n\r\n  const [collapsed, setCollapsed] = useState(false); //отобр меню развернут или свернут\r\n\r\n  const getMovieReqest = async (q) => { //запрос на сервер\r\n    const url = `http://www.omdbapi.com/?s=${q}&apikey=${API_KEY}`\r\n\r\n    const response = await fetch(url); //запрос к серверу\r\n    const responseJson = await response.json();\r\n\r\n    if (responseJson.Response === 'False') { //если нет ответа\r\n      setError(response.Error) //записать в обьект ошибки ошибку\r\n    }\r\n    if (responseJson.Search) {\r\n      setData(responseJson.Search) //записать в обьект с данными полученный ответ\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoading(true); //ждём\r\n    setError(null); //обнуление ошибки\r\n    setData(null); //обнуление обьекта данных\r\n    getMovieReqest(q);\r\n  }, [q]); //ищем черещ getmovie с параметрами q\r\n\r\n  const addFavItem = (item) => { //добавл в список избранныx\r\n    const newFavList = [...favList, item]; //новый список сост из старых эл и нового выбранного\r\n    setFav(newFavList) //перезаписываем обьект списка избранных\r\n  };\r\n\r\n  const addWatchItem = (item) => {\r\n    const newWatchList = [...watchList, item];\r\n    setWatch(newWatchList)\r\n  };\r\n\r\n  const removeFavItem = (item) => {\r\n    const newFavList = favList.filter(fav => fav.imdbID !== item.imdbID)\r\n    setFav(newFavList) //перезаписываем обьект списка избранных\r\n\r\n  }\r\n\r\n  const removeWatchItem = (item) => {\r\n    const newWatchList = watchList.filter(watch => fav.imdbID !== item.imdbID)\r\n    setFav(newWatchList) //перезаписываем обьект списка избранных\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className='App'>\r\n      <Layout className='Layout' style={{ minHeight: '100vh' }}>\r\n        <Sider /* боковая панель */\r\n          collapsible /* сворачивающаяся */\r\n          onCollapse={() => { setCollapsed(!collapsed) }}\r\n        >\r\n          <MenuSider\r\n            collapsed={collapsed} /> {/* зависит от того, свернута ли бок панель */}\r\n        </Sider>\r\n        <Layout className='layout'>\r\n          <Header style={{ background: '#FFD500' }}>\r\n            <SearchBox\r\n              searchHandler={setQuery} /> {/* поиск по введенным параметрам кот сохр в обьект */}\r\n          </Header>\r\n          <Content\r\n            style={{ padding: '20px 20px' }}>\r\n            <div style={{ background: 'fff' }} >\r\n              <Row justify='center'>\r\n                {loading && <Loader />} {/* ожидание из стейта и иконка загрузки */}\r\n                {error !== null &&\r\n                  <div style={{ margin: '20px 0' }}>\r\n                    <Alert message={error} type='error' />\r\n                  </div>\r\n                }\r\n                <ItemsBox\r\n                  data={data} //передаем обьект с данными на уровень ниже\r\n                  ShowDetail={setShowDetail}\r\n                  DetailRequest={setDetailRequest}\r\n                  ActivateModal={setActivateModal}\r\n\r\n                  AddFavItem={addFavItem} //передаем на уровень ниже функцию добавления кликнутого элемента в список избранных\r\n                  AddWatchItem={addWatchItem}\r\n\r\n                />\r\n\r\n                {/* {favList !== null && favList.length > 0 && favList.map((result, idx) => (\r\n                  <FavBox\r\n                    key={idx}\r\n                    {...result}\r\n                  />\r\n                ))} */}\r\n              </Row>\r\n            </div>\r\n            <Modal\r\n              title='Detail'\r\n              centered\r\n              visible={activateModal}\r\n              onCancel={() => setActivateModal(false)}\r\n              footer={null}\r\n              width={900}\r\n            >\r\n              {detailRequest === false ? /* если получен ответ от сервера с деталями */\r\n                (<MovieDetail {...detail} />) : /* показать детали */\r\n                (<Loader />)\r\n              }\r\n            </Modal>\r\n          </Content>\r\n          <Footer>\r\n            footer\r\n        </Footer>\r\n        </Layout>\r\n\r\n      </Layout>\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default App;\r\n","D:\\WORK\\projects\\movie-db\\src\\components\\menu-sider\\index.js",[],"D:\\WORK\\projects\\movie-db\\src\\components\\search-box\\index.js",[],"D:\\WORK\\projects\\movie-db\\src\\components\\loader\\index.js",[],"D:\\WORK\\projects\\movie-db\\src\\components\\favPage\\index.js",[],"D:\\WORK\\projects\\movie-db\\src\\components\\movie-detail\\index.js",[],"D:\\WORK\\projects\\movie-db\\src\\components\\items-box\\index.js",[],"D:\\WORK\\projects\\movie-db\\src\\components\\menu-sider\\menu-sider.jsx",[],"D:\\WORK\\projects\\movie-db\\src\\components\\loader\\loader.jsx",[],"D:\\WORK\\projects\\movie-db\\src\\components\\movie-detail\\movie-detail.jsx",[],"D:\\WORK\\projects\\movie-db\\src\\components\\items-box\\items-box.jsx",["74","75"],"import React from 'react';\r\nimport {\r\n    Row,\r\n    Col,\r\n    Card,\r\n    Tag, Button\r\n} from 'antd';\r\nimport './items-box.css'\r\nimport { HeartOutlined, FolderViewOutlined } from '@ant-design/icons'\r\n\r\nconst { Meta } = Card;\r\n\r\n\r\nconst ItemsBox = ({ data, AddFavItem, imdbID, ShowDetail, DetailRequest, ActivateModal }) => {\r\n\r\n    const itemClickHandler = () => { //обработчик события клика. при клике на карточку\r\n        ActivateModal(true); //показать модалку. эл импортируется из другого компонента\r\n        DetailRequest(true); //запрос к серверу за деталями фильма\r\n    }\r\n\r\n    const watchClickHandler = () => { //при клике на глаз\r\n        console.log('watch')\r\n\r\n    }\r\n\r\n    const favClickHandler = (item) => {\r\n        console.log('like')\r\n        console.log(item)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {data !== null && data.length > 0 && data.map((result, idx) => ( /* перебор обьекта даты */\r\n                <div\r\n                    key={idx}\r\n                    className='card-container'\r\n                    style={{ margin: '15px', display: 'flex', }}\r\n                >\r\n                    <div className='overlay'>\r\n                        <Button\r\n                            className='overlay like'\r\n                            type=\"primary\"\r\n                            shape='circle'\r\n                            icon={<HeartOutlined style={{ fontSize: '23px', marginTop: '2px' }} />}\r\n                            onClick={() => AddFavItem(result)}\r\n                            //при клике на кнопку вызывается переданная сверху функция добавления данного обьекта в обьект с избранными\r\n                        >\r\n                        </Button>\r\n                        <Button\r\n                            className='overlay watch'\r\n                            type=\"primary\"\r\n                            shape='circle'\r\n                            icon={<FolderViewOutlined style={{ fontSize: '23px' }} />}\r\n                            onClick={() => AddFavItem(result)}\r\n\r\n                        >\r\n                        </Button>\r\n\r\n\r\n                    </div>\r\n                    <Card /* карточка  с фото */\r\n                        style={{ maxWidth: 200 }}\r\n                        cover={\r\n                            <img\r\n                                style={{ height: 290 }}\r\n                                alt={result.Title}\r\n                                src={result.Poster === 'N/A' ?\r\n                                    'https://placehold.it/198x264&text=Image+Not+Found' :\r\n                                    result.Poster}\r\n                                onClick={() => itemClickHandler()}\r\n                            />}\r\n                    >\r\n                        <Meta /* краткая информация */\r\n                            title={result.Title}\r\n                            description={false}\r\n                            style={{ padding: 0 }}\r\n                        />\r\n                        <Row\r\n                            style={{ marginTop: '3px' }}\r\n                            className='gutter-row'\r\n                        >\r\n                            <Col>\r\n                                {result.Type === 'movie' ?\r\n                                    <Tag color='magenta'>{result.Type}</Tag> :\r\n                                    <Tag color='green'>{result.Type}</Tag>}\r\n                            </Col>\r\n                        </Row>\r\n                    </Card>\r\n                </div >\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ItemsBox;","D:\\WORK\\projects\\movie-db\\src\\components\\search-box\\search-box.jsx",[],"D:\\WORK\\projects\\movie-db\\src\\components\\favPage\\fav-box.jsx",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":34,"column":10,"nodeType":"82","messageId":"83","endLine":34,"endColumn":16},{"ruleId":"80","severity":1,"message":"84","line":34,"column":18,"nodeType":"82","messageId":"83","endLine":34,"endColumn":27},{"ruleId":"80","severity":1,"message":"85","line":35,"column":10,"nodeType":"82","messageId":"83","endLine":35,"endColumn":18},{"ruleId":"80","severity":1,"message":"86","line":35,"column":20,"nodeType":"82","messageId":"83","endLine":35,"endColumn":31},{"ruleId":"80","severity":1,"message":"87","line":76,"column":9,"nodeType":"82","messageId":"83","endLine":76,"endColumn":22},{"ruleId":"80","severity":1,"message":"88","line":82,"column":9,"nodeType":"82","messageId":"83","endLine":82,"endColumn":24},{"ruleId":"89","severity":2,"message":"90","line":83,"column":52,"nodeType":"82","messageId":"91","endLine":83,"endColumn":55},{"ruleId":"80","severity":1,"message":"92","line":21,"column":11,"nodeType":"82","messageId":"83","endLine":21,"endColumn":28},{"ruleId":"80","severity":1,"message":"93","line":26,"column":11,"nodeType":"82","messageId":"83","endLine":26,"endColumn":26},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'favBtn' is assigned a value but never used.","Identifier","unusedVar","'setFavBtn' is assigned a value but never used.","'watchBtn' is assigned a value but never used.","'setWatchBtn' is assigned a value but never used.","'removeFavItem' is assigned a value but never used.","'removeWatchItem' is assigned a value but never used.","no-undef","'fav' is not defined.","undef","'watchClickHandler' is assigned a value but never used.","'favClickHandler' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
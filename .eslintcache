[{"D:\\WORK\\projects\\movie-db\\src\\index.js":"1","D:\\WORK\\projects\\movie-db\\src\\components\\app\\index.js":"2","D:\\WORK\\projects\\movie-db\\src\\components\\app\\app.jsx":"3","D:\\WORK\\projects\\movie-db\\src\\components\\search-box\\index.js":"4","D:\\WORK\\projects\\movie-db\\src\\components\\items-box\\index.js":"5","D:\\WORK\\projects\\movie-db\\src\\components\\loader\\index.js":"6","D:\\WORK\\projects\\movie-db\\src\\components\\movie-detail\\index.js":"7","D:\\WORK\\projects\\movie-db\\src\\components\\menu-sider\\index.js":"8","D:\\WORK\\projects\\movie-db\\src\\components\\loader\\loader.jsx":"9","D:\\WORK\\projects\\movie-db\\src\\components\\items-box\\items-box.jsx":"10","D:\\WORK\\projects\\movie-db\\src\\components\\movie-detail\\movie-detail.jsx":"11","D:\\WORK\\projects\\movie-db\\src\\components\\menu-sider\\menu-sider.jsx":"12","D:\\WORK\\projects\\movie-db\\src\\components\\search-box\\search-box.jsx":"13"},{"size":163,"mtime":1612000627898,"results":"14","hashOfConfig":"15"},{"size":49,"mtime":1610633399536,"results":"16","hashOfConfig":"15"},{"size":8991,"mtime":1613497434171,"results":"17","hashOfConfig":"15"},{"size":64,"mtime":1610734584570,"results":"18","hashOfConfig":"15"},{"size":65,"mtime":1611850209434,"results":"19","hashOfConfig":"15"},{"size":58,"mtime":1610807032664,"results":"20","hashOfConfig":"15"},{"size":73,"mtime":1610808908126,"results":"21","hashOfConfig":"15"},{"size":68,"mtime":1610736531231,"results":"22","hashOfConfig":"15"},{"size":233,"mtime":1610807032673,"results":"23","hashOfConfig":"15"},{"size":3363,"mtime":1613488159638,"results":"24","hashOfConfig":"15"},{"size":1583,"mtime":1612895676801,"results":"25","hashOfConfig":"15"},{"size":2949,"mtime":1613497208378,"results":"26","hashOfConfig":"15"},{"size":2579,"mtime":1613500178453,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"jf63mq",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\WORK\\projects\\movie-db\\src\\index.js",[],["57","58"],"D:\\WORK\\projects\\movie-db\\src\\components\\app\\index.js",[],"D:\\WORK\\projects\\movie-db\\src\\components\\app\\app.jsx",["59"],"import React, { useEffect, useState, browserHistory } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport SearchBox from '../search-box';\r\nimport MenuSider from '../menu-sider';\r\nimport Loader from '../loader';\r\nimport ItemsBox from '../items-box';\r\nimport MovieDetail from '../movie-detail';\r\n/* import FavPage from '../pages/fav-page';\r\nimport FilmPage from '../pages/film-page';\r\nimport MainPage from '../pages/main-page';\r\nimport SeriesPage from '../pages/series-page';\r\nimport WatchPage from '../pages/watch-page'; */\r\n\r\nimport { Layout, Row, Modal, Alert, Pagination } from 'antd';\r\nimport 'antd/dist/antd.css'\r\nimport './app.css';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nconst API_KEY = 'eb9d8a81';\r\n\r\nfunction App() {\r\n\r\n  const [movie, setMovie] = useState(null); //будет хранить обьект ответа от сервера\r\n  const [error, setError] = useState(null); //будет обновляться только при ошибке\r\n  const [loading, setLoading] = useState(false); //обект ожидания\r\n  const [q, setQuery] = useState('love'); //хранит искомые параметры запроса \r\n\r\n  const [activateModal, setActivateModal] = useState(false); //помогает закрыть модал компонент\r\n  const [detail, setShowDetail] = useState(false); //собирает детали фильма\r\n  const [detailRequest, setDetailRequest] = useState(false); //отображение загрузчика\r\n\r\n  const [favList, setFav] = useState([]); //список избранных\r\n  const [watchList, setWatch] = useState([]); //список к просмотру\r\n\r\n  const [collapsedMenu, setCollapsedMenu] = useState(false); //отобр меню развернут или свернут\r\n  const [collapsedSearch, setCollapsedSearch] = useState(false); //отобр меню развернут или свернут\r\n\r\n\r\n  const [currPage, setCurrPage] = useState(1)\r\n  const [totalResults, setTotalResults] = useState(null);\r\n\r\n\r\n  const toggleItem = (item, state) => {\r\n    let newList\r\n    if (state.includes(item)) {\r\n      newList = state.filter(elem => elem.imdbID !== item.imdbID) //в новый список попадают все кроме выбранного на удаление\r\n    }\r\n    if (!state.includes(item)) {\r\n      newList = [...state, item]; //новый список сост из старых эл и нового выбранного\r\n    }\r\n    state === favList ? setFav(newList) : setWatch(newList) //перезаписываем обьект списка избранных\r\n  }\r\n\r\n  const getDataRequest = (searchParam, questionParam, setState, currPage, type = '', year = '') => { //гибкий запрос на сервер\r\n\r\n    fetch(`http://www.omdbapi.com/?${searchParam}=${questionParam}&page=${currPage}&type=${type}&year=${year}&apikey=${API_KEY}`)\r\n      .then(resp => resp)\r\n      .then(resp => resp.json())\r\n      .then(response => {\r\n        if (response.Response === 'False') { //если нет ответа\r\n          setError(response.Error) //записать в обьект ошибки ошибку\r\n        } else {\r\n          searchParam === 's' ?\r\n            setState(response.Search) : //если поиск по названию \r\n            setState(response) //если поиск по imdbId\r\n          setTotalResults(response.totalResults)\r\n        }\r\n        setLoading(false);\r\n        setDetailRequest(false); //для модалки\r\n      }).catch(({ message }) => { //в случае неудачи словить ошибку\r\n        setError(message); //и записать ее в стейт\r\n        setLoading(false);\r\n      })\r\n  }\r\n\r\n  const RenderItemBox = ({ state }) => {\r\n    return (state !== null && state.length > 0 && state.map((result) => (\r\n      <ItemsBox\r\n        ToggleItem={toggleItem} //добавить или удалить из стейтов\r\n        favList={favList}\r\n        watchList={watchList}\r\n        \r\n        isActive={favList.includes(result)} //активность кнопки\r\n        isWatch={watchList.includes(result)}\r\n        \r\n        GetData={getDataRequest} //запрос данных с сервера\r\n        ShowDetail={setShowDetail}\r\n        DetailRequest={setDetailRequest}\r\n        ActivateModal={setActivateModal}\r\n\r\n        key={result.imdbID} //присв ключ обьекту из списка в соотв с его номером в базе \r\n        result={result}\r\n        {...result}\r\n      />\r\n    )))\r\n  }\r\n\r\n  const onPageChange = (page) => {\r\n    getDataRequest('s', q, setMovie, page)\r\n    setCurrPage(page)\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLoading(true); //ждём\r\n    setTotalResults(null); //обнуление кол-ва фильмов от сервера\r\n    setError(null); //обнуление ошибки перед новым запросом\r\n    setMovie(null); //обнуление обьекта данных перед новым запросом\r\n    //getMovieReqest(q)\r\n    getDataRequest('s', q, setMovie); //запрос на сервер со своими параметрами\r\n  }, [q]); //ищем черещ getmovie с параметрами q\r\n  //в кач-ве второго параметра может быть только примитивный обьект. при его изменении будет происходить ререндеринг\r\n\r\n\r\n  return (\r\n    <Router>\r\n      <div className='App'>\r\n        <Layout className='Layout'>\r\n          <Sider /* боковая панель */\r\n            collapsible /* сворачивающаяся */\r\n            onCollapse={() => setCollapsedMenu(!collapsedMenu)}\r\n          >\r\n            <MenuSider />\r\n          </Sider>\r\n          <Layout className='layout'>\r\n            <Header>\r\n              <SearchBox\r\n                searchHandler={setQuery} /* поиск по введенным параметрам кот сохр в обьект */\r\n                collapsible /* сворачивающаяся */\r\n                collapsedSearch={collapsedSearch}\r\n                toggleCollapsedSearch={setCollapsedSearch}\r\n                onCollapse={() => setCollapsedSearch(!collapsedSearch)}\r\n                GetData={getDataRequest} //запрос данных с сервера\r\n\r\n              />\r\n            </Header>\r\n            <Content>\r\n              <Row justify='center'>\r\n                {loading && <Loader />} {/* ожидание из стейта и иконка загрузки */}\r\n\r\n                {error !== null &&\r\n                  <div style={{ margin: '20px 0' }}>\r\n                    <Alert message={error} type='error' />\r\n                  </div>\r\n                }\r\n\r\n                <Switch>\r\n                  <Route path='/main'>\r\n                    <RenderItemBox state={movie}/>\r\n                    {/* <MainPage /> */}\r\n                  </Route>\r\n                  <Route path='/favorites'>\r\n                    <RenderItemBox state={favList} />\r\n                    {/* <FavPage /> */}\r\n                  </Route>\r\n                  <Route path='/to-watch'>\r\n                    <RenderItemBox state={watchList} />\r\n                    {/* <WatchPage /> */}\r\n                  </Route>\r\n                  <Route path='/films'>\r\n                    <RenderItemBox state={movie} />\r\n                    {/* <FilmPage /> */}\r\n                  </Route>\r\n                  <Route path='/serials'>\r\n                    <RenderItemBox state={movie} />\r\n                    {/* <SeriesPage /> */}\r\n                  </Route>\r\n                </Switch>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Pagination\r\n                  current={currPage} //берем из стейта, кот обновл\r\n                  total={totalResults} //length для fav watch \r\n                  hideOnSinglePage={true} //спрятать если страница одна\r\n                  showSizeChanger={false} //выбор кол-ва отображаемых элементов на странице\r\n                  onChange={onPageChange}\r\n                />\r\n              </Row>\r\n\r\n              <Modal\r\n                title='Detail'\r\n                centered\r\n                visible={activateModal}\r\n                onCancel={() => { setActivateModal(false); setShowDetail(null) }}\r\n                footer={null}\r\n              >\r\n                {detailRequest === false ? /* если получен ответ от сервера с деталями */\r\n                  (<MovieDetail {...detail} />) : /* показать детали */\r\n                  (<Loader />)\r\n                }\r\n              </Modal>\r\n\r\n\r\n            </Content>\r\n            <Footer>\r\n              footer\r\n        </Footer>\r\n          </Layout>\r\n\r\n        </Layout>\r\n      </div >\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","D:\\WORK\\projects\\movie-db\\src\\components\\search-box\\index.js",[],"D:\\WORK\\projects\\movie-db\\src\\components\\items-box\\index.js",[],"D:\\WORK\\projects\\movie-db\\src\\components\\loader\\index.js",[],"D:\\WORK\\projects\\movie-db\\src\\components\\movie-detail\\index.js",[],"D:\\WORK\\projects\\movie-db\\src\\components\\menu-sider\\index.js",[],"D:\\WORK\\projects\\movie-db\\src\\components\\loader\\loader.jsx",[],"D:\\WORK\\projects\\movie-db\\src\\components\\items-box\\items-box.jsx",[],"D:\\WORK\\projects\\movie-db\\src\\components\\movie-detail\\movie-detail.jsx",[],"D:\\WORK\\projects\\movie-db\\src\\components\\menu-sider\\menu-sider.jsx",["60","61","62"],"import React, { useState, useRouteMatch } from 'react';\r\nimport { Menu } from 'antd';\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\nimport 'antd/dist/antd.css'\r\nimport './menu-sider.css'\r\nimport {\r\n    DatabaseOutlined,\r\n    VideoCameraOutlined,\r\n    EyeOutlined,\r\n    HeartOutlined,\r\n} from '@ant-design/icons'\r\n\r\nconst MenuSider = () => {\r\n\r\n    return (\r\n        <>\r\n            <Menu\r\n                defaultSelectedKeys={'1'}\r\n                mode=\"inline\"\r\n                theme=\"dark\" >\r\n                <Menu.Item\r\n                    key=\"1\"\r\n                    className=\"customclass\"\r\n                    icon={<DatabaseOutlined />} >\r\n                    the movie database`\r\n                    <NavLink to='/main' />\r\n                </Menu.Item>\r\n\r\n                <Menu.Item\r\n                    key=\"2\"\r\n                    className=\"customclass\"\r\n                    icon={<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-film\" viewBox=\"0 0 16 16\">\r\n                    <path d=\"M0 1a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H1a1 1 0 0 1-1-1V1zm4 0v6h8V1H4zm8 8H4v6h8V9zM1 1v2h2V1H1zm2 3H1v2h2V4zM1 7v2h2V7H1zm2 3H1v2h2v-2zm-2 3v2h2v-2H1zM15 1h-2v2h2V1zm-2 3v2h2V4h-2zm2 3h-2v2h2V7zm-2 3v2h2v-2h-2zm2 3h-2v2h2v-2z\"/>\r\n                  </svg>}>\r\n                    movies\r\n                    <NavLink to='/films' />\r\n                </Menu.Item>\r\n\r\n                <Menu.Item\r\n                    key=\"3\"\r\n                    className=\"customclass\"\r\n                    icon={<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-camera-reels\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M6 3a3 3 0 1 1-6 0 3 3 0 0 1 6 0zM1 3a2 2 0 1 0 4 0 2 2 0 0 0-4 0z\" />\r\n                        <path d=\"M9 6h.5a2 2 0 0 1 1.983 1.738l3.11-1.382A1 1 0 0 1 16 7.269v7.462a1 1 0 0 1-1.406.913l-3.111-1.382A2 2 0 0 1 9.5 16H2a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h7zm6 8.73V7.27l-3.5 1.555v4.35l3.5 1.556zM1 8v6a1 1 0 0 0 1 1h7.5a1 1 0 0 0 1-1V8a1 1 0 0 0-1-1H2a1 1 0 0 0-1 1z\" />\r\n                        <path d=\"M9 6a3 3 0 1 0 0-6 3 3 0 0 0 0 6zM7 3a2 2 0 1 1 4 0 2 2 0 0 1-4 0z\" />\r\n                    </svg>}>\r\n                    serials\r\n                    <NavLink to='/serials' />\r\n                </Menu.Item>\r\n\r\n                <Menu.Item\r\n                    key=\"4\"\r\n                    className=\"customclass\"\r\n                    icon={<HeartOutlined />}>\r\n                    liked\r\n                    <NavLink to='/favorites' />\r\n                </Menu.Item>\r\n\r\n                <Menu.Item\r\n                    key=\"5\"\r\n                    className=\"customclass\"\r\n                    icon={<EyeOutlined />}>\r\n                    watchlist\r\n                    <NavLink to='/to-watch' />\r\n                </Menu.Item>\r\n\r\n            </Menu>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(MenuSider);","D:\\WORK\\projects\\movie-db\\src\\components\\search-box\\search-box.jsx",["63","64"],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":1,"column":38,"nodeType":"71","messageId":"72","endLine":1,"endColumn":52},{"ruleId":"69","severity":1,"message":"73","line":1,"column":17,"nodeType":"71","messageId":"72","endLine":1,"endColumn":25},{"ruleId":"69","severity":1,"message":"74","line":1,"column":27,"nodeType":"71","messageId":"72","endLine":1,"endColumn":40},{"ruleId":"69","severity":1,"message":"75","line":8,"column":5,"nodeType":"71","messageId":"72","endLine":8,"endColumn":24},{"ruleId":"69","severity":1,"message":"76","line":5,"column":5,"nodeType":"71","messageId":"72","endLine":5,"endColumn":9},{"ruleId":"69","severity":1,"message":"77","line":6,"column":23,"nodeType":"71","messageId":"72","endLine":6,"endColumn":30},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'browserHistory' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useRouteMatch' is defined but never used.","'VideoCameraOutlined' is defined but never used.","'Menu' is defined but never used.","'Divider' is defined but never used.","no-global-assign","no-unsafe-negation"]
[{"D:\\WORK\\projects\\movie-db\\src\\index.js":"1","D:\\WORK\\projects\\movie-db\\src\\components\\app\\index.js":"2","D:\\WORK\\projects\\movie-db\\src\\components\\app\\app.jsx":"3"},{"size":164,"mtime":1610633399546,"results":"4","hashOfConfig":"5"},{"size":49,"mtime":1610633399536,"results":"6","hashOfConfig":"5"},{"size":4514,"mtime":1610643184332,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"jf63mq",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"D:\\WORK\\projects\\movie-db\\src\\index.js",[],["16","17"],"D:\\WORK\\projects\\movie-db\\src\\components\\app\\index.js",[],"D:\\WORK\\projects\\movie-db\\src\\components\\app\\app.jsx",["18","19","20","21","22","23","24","25","26","27"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport {\r\n  Layout,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Space,\r\n  Tag,\r\n  Spin,\r\n  Alert,\r\n  Button,\r\n  Modal,\r\n  Typography,\r\n  Menu,\r\n  Switch,\r\n} from 'antd';\r\nimport 'antd/dist/antd.css'\r\n\r\nimport {\r\n  VideoCameraOutlined,\r\n  EyeInvisibleOutlined,\r\n  EyeOutlined,\r\n  LikeOutlined,\r\n  DislikeOutlined,\r\n  HeartOutlined,\r\n} from '@ant-design/icons'\r\n\r\nimport './app.css';\r\n\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { Search } = Input;\r\nconst { Meta } = Card;\r\nconst TextTitle = Typography.Title;\r\n\r\nfunction App() {\r\n\r\n  /*  const [data, setData] = useState(null); //будет хранить обьект ответа\r\n   const [error, setError] = useState(null); //будет обновляться только при ошибке\r\n   const [loading, setLoading] = useState(false); //показывает спиннер\r\n   const [q, setQuery] = useState('batman'); //хранит искомые параметры запроса \r\n \r\n   const [activateModal, setActivateModal] = useState(false); //помогает закрыть модал компонент\r\n   const [detail, setShowDetail] = useState(false); //собирает данные\r\n   const [detailRequest, setDetailRequest] = useState(false); //отображение загрузчика\r\n \r\n  */\r\n  const [collapsed, setCollapsed] = useState(false); //\r\n\r\n\r\n  const toggleCollapsed = () => {\r\n    setCollapsed(!collapsed)\r\n  }\r\n\r\n  return (\r\n    <div className='App'>\r\n      <Layout className='Layout' style={{ minHeight: '100vh' }}>\r\n        <Sider\r\n          collapsible\r\n          onCollapse={toggleCollapsed}\r\n        >\r\n          <div className=\"logo\" />\r\n          <Menu\r\n            style={{\r\n              height: '100vh',\r\n              background: '#212121',\r\n              color: '#D6D9DC',\r\n              paddingTop: '60px',\r\n              paddingLeft: '20px',\r\n              borderRight: '0px',\r\n              fontSize: '26px',\r\n            }}\r\n            \r\n            defaultSelectedKeys={['1']}\r\n            mode=\"inline\"\r\n            inlineCollapsed={collapsed}\r\n          >\r\n            <Menu.Item\r\n              key=\"1\"\r\n              mode=\"inline\"\r\n              className=\"customclass\"\r\n              icon={<VideoCameraOutlined style={{ fontSize: '20px' }} />}>\r\n              films\r\n        </Menu.Item>\r\n            <Menu.Item\r\n              key=\"2\"\r\n              className=\"customclass\"\r\n              style={{ marginTop: '10px' }}\r\n              icon={<VideoCameraOutlined style={{ fontSize: '20px' }} />}>\r\n              serials\r\n        </Menu.Item>\r\n            <Menu.Item\r\n              key=\"3\"\r\n              className=\"customclass\"\r\n              style={{ marginTop: '20px' }}\r\n              icon={<EyeOutlined style={{ fontSize: '20px' }} />}>\r\n              watched\r\n        </Menu.Item>\r\n            <Menu.Item\r\n              key=\"4\"\r\n              className=\"customclass\"\r\n              style={{ marginTop: '10px' }}\r\n              icon={<EyeInvisibleOutlined style={{ fontSize: '20px' }} />}>\r\n              to watch\r\n        </Menu.Item>\r\n            <Menu.Item\r\n              key=\"5\"\r\n              className=\"customclass\"\r\n              style={{ marginTop: '20px' }}\r\n              icon={<HeartOutlined style={{ fontSize: '20px' }} />}>\r\n              liked\r\n        </Menu.Item>\r\n            <Menu.Item\r\n              key=\"6\"\r\n              className=\"customclass\"\r\n              icon={<LikeOutlined style={{ fontSize: '20px' }} />}>\r\n              good\r\n        </Menu.Item>\r\n            <Menu.Item\r\n              key=\"7\"\r\n              className=\"customclass\"\r\n              icon={<DislikeOutlined style={{ fontSize: '20px' }} />}>\r\n              bad\r\n        </Menu.Item>\r\n\r\n          </Menu>\r\n        </Sider>\r\n        <Layout className='layout'>\r\n          <Header style={{ background: '#FFD500' }}>\r\n            <SearchBox />\r\n          </Header>\r\n          <Content>\r\n            content\r\n        </Content>\r\n          <Footer>\r\n            footer\r\n        </Footer>\r\n        </Layout>\r\n\r\n      </Layout>\r\n    </div >\r\n  )\r\n\r\n}\r\n\r\nconst SearchBox = () => {\r\n\r\n  return (\r\n    <Row marginTop='150px' justify='center'>\r\n      <Col span={15} >\r\n        <Search style={{ marginTop: 12, type: 'flex' }}\r\n          placeholder=\"enter movie, series, episode name\"\r\n          size=\"large\"\r\n          onSearch={value => console.log(value)}\r\n        />\r\n      </Col>\r\n    </Row>\r\n\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default App;",{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":1,"column":17,"nodeType":"34","messageId":"35","endLine":1,"endColumn":26},{"ruleId":"32","severity":1,"message":"36","line":9,"column":3,"nodeType":"34","messageId":"35","endLine":9,"endColumn":8},{"ruleId":"32","severity":1,"message":"37","line":10,"column":3,"nodeType":"34","messageId":"35","endLine":10,"endColumn":6},{"ruleId":"32","severity":1,"message":"38","line":11,"column":3,"nodeType":"34","messageId":"35","endLine":11,"endColumn":7},{"ruleId":"32","severity":1,"message":"39","line":12,"column":3,"nodeType":"34","messageId":"35","endLine":12,"endColumn":8},{"ruleId":"32","severity":1,"message":"40","line":13,"column":3,"nodeType":"34","messageId":"35","endLine":13,"endColumn":9},{"ruleId":"32","severity":1,"message":"41","line":14,"column":3,"nodeType":"34","messageId":"35","endLine":14,"endColumn":8},{"ruleId":"32","severity":1,"message":"42","line":17,"column":3,"nodeType":"34","messageId":"35","endLine":17,"endColumn":9},{"ruleId":"32","severity":1,"message":"43","line":35,"column":9,"nodeType":"34","messageId":"35","endLine":35,"endColumn":13},{"ruleId":"32","severity":1,"message":"44","line":36,"column":7,"nodeType":"34","messageId":"35","endLine":36,"endColumn":16},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Space' is defined but never used.","'Tag' is defined but never used.","'Spin' is defined but never used.","'Alert' is defined but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","'Switch' is defined but never used.","'Meta' is assigned a value but never used.","'TextTitle' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]